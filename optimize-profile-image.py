#!/usr/bin/env python3
"""
Script para optimizar la imagen de perfil para web
Genera m√∫ltiples tama√±os optimizados desde la imagen original de alta resoluci√≥n
"""

from PIL import Image
import os

def optimize_profile_image():
    # Ruta de la imagen original
    original_path = "public/profile/adrian-montes-linares.jpg"
    
    if not os.path.exists(original_path):
        print(f"‚ùå No se encontr√≥ la imagen en: {original_path}")
        print("Por favor, aseg√∫rate de que la imagen est√© en la carpeta public/profile/")
        return
    
    try:
        # Abrir la imagen original
        print("üì∏ Abriendo imagen original...")
        img = Image.open(original_path)
        print(f"   Tama√±o original: {img.size[0]}x{img.size[1]} p√≠xeles")
        
        # Tama√±os que necesitamos para web
        sizes = [
            (256, 256, "small"),    # Para mobile
            (512, 512, "medium"),   # Para desktop normal
            (1024, 1024, "large")   # Para pantallas de alta densidad
        ]
        
        for width, height, suffix in sizes:
            print(f"üîÑ Generando versi√≥n {suffix} ({width}x{height})...")
            
            # Crear una versi√≥n cuadrada centrada
            # Primero, hacer la imagen cuadrada croppeando desde el centro
            min_side = min(img.size)
            left = (img.size[0] - min_side) // 2
            top = (img.size[1] - min_side) // 4  # Un poco m√°s arriba para enfocar la cara
            right = left + min_side
            bottom = top + min_side
            
            # Crop al cuadrado
            img_square = img.crop((left, top, right, bottom))
            
            # Redimensionar con alta calidad
            img_resized = img_square.resize((width, height), Image.Resampling.LANCZOS)
            
            # Aplicar un ligero sharpening
            from PIL import ImageEnhance
            enhancer = ImageEnhance.Sharpness(img_resized)
            img_enhanced = enhancer.enhance(1.1)
            
            # Guardar la imagen optimizada
            output_path = f"public/profile/adrian-montes-linares-{suffix}.jpg"
            img_enhanced.save(
                output_path, 
                "JPEG", 
                quality=95,  # Alta calidad
                optimize=True,
                progressive=True  # Carga progresiva
            )
            
            # Mostrar informaci√≥n del archivo
            file_size = os.path.getsize(output_path) / 1024  # KB
            print(f"   ‚úÖ Guardado: {output_path} ({file_size:.1f} KB)")
        
        print("\nüéâ ¬°Optimizaci√≥n completada!")
        print("\nüìù Ahora puedes usar estas versiones optimizadas:")
        print("   - adrian-montes-linares-small.jpg (256x256) - Para m√≥viles")
        print("   - adrian-montes-linares-medium.jpg (512x512) - Para desktop")
        print("   - adrian-montes-linares-large.jpg (1024x1024) - Para pantallas HD")
        print("\nüí° Recomendaci√≥n: Usa la versi√≥n 'medium' para el sitio web")
        
    except Exception as e:
        print(f"‚ùå Error al procesar la imagen: {str(e)}")
        print("Aseg√∫rate de tener Pillow instalado: pip install Pillow")

if __name__ == "__main__":
    optimize_profile_image()
