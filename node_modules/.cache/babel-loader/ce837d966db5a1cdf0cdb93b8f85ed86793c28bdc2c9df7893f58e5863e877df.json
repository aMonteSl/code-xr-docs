{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nexport const useRotatingText = (texts = [], options = {}) => {\n  _s();\n  const {\n    interval = 6000,\n    // 6 segundos por defecto\n    autoStart = true,\n    loop = true\n  } = options;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(autoStart);\n\n  // Función para ir al siguiente texto\n  const nextText = useCallback(() => {\n    setCurrentIndex(prev => {\n      if (loop) {\n        return (prev + 1) % texts.length;\n      } else {\n        return Math.min(prev + 1, texts.length - 1);\n      }\n    });\n  }, [texts.length, loop]);\n\n  // Función para ir al texto anterior\n  const prevText = useCallback(() => {\n    setCurrentIndex(prev => {\n      if (loop) {\n        return prev === 0 ? texts.length - 1 : prev - 1;\n      } else {\n        return Math.max(prev - 1, 0);\n      }\n    });\n  }, [texts.length, loop]);\n\n  // Función para ir a un texto específico\n  const goToText = useCallback(index => {\n    if (index >= 0 && index < texts.length) {\n      setCurrentIndex(index);\n    }\n  }, [texts.length]);\n\n  // Auto-rotate\n  useEffect(() => {\n    if (!isPlaying || texts.length <= 1) return;\n    const intervalId = setInterval(() => {\n      nextText();\n    }, interval);\n    return () => clearInterval(intervalId);\n  }, [isPlaying, interval, nextText, texts.length]);\n\n  // Pausar/reanudar\n  const pause = useCallback(() => setIsPlaying(false), []);\n  const play = useCallback(() => setIsPlaying(true), []);\n  const toggle = useCallback(() => setIsPlaying(prev => !prev), []);\n\n  // Reset\n  const reset = useCallback(() => {\n    setCurrentIndex(0);\n    setIsPlaying(autoStart);\n  }, [autoStart]);\n  return {\n    currentText: texts[currentIndex] || '',\n    currentIndex,\n    totalTexts: texts.length,\n    isPlaying,\n    nextText,\n    prevText,\n    goToText,\n    pause,\n    play,\n    toggle,\n    reset,\n    isFirst: currentIndex === 0,\n    isLast: currentIndex === texts.length - 1,\n    progress: texts.length > 0 ? (currentIndex + 1) / texts.length : 0\n  };\n};\n_s(useRotatingText, \"+Fg64GihTAOzf+BHPSO0WWLqSD8=\");","map":{"version":3,"names":["useState","useEffect","useCallback","useRotatingText","texts","options","_s","interval","autoStart","loop","currentIndex","setCurrentIndex","isPlaying","setIsPlaying","nextText","prev","length","Math","min","prevText","max","goToText","index","intervalId","setInterval","clearInterval","pause","play","toggle","reset","currentText","totalTexts","isFirst","isLast","progress"],"sources":["/home/adrian/web_code_xr/src/hooks/useRotatingText.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\nexport const useRotatingText = (texts = [], options = {}) => {\n  const {\n    interval = 6000, // 6 segundos por defecto\n    autoStart = true,\n    loop = true\n  } = options;\n\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(autoStart);\n\n  // Función para ir al siguiente texto\n  const nextText = useCallback(() => {\n    setCurrentIndex(prev => {\n      if (loop) {\n        return (prev + 1) % texts.length;\n      } else {\n        return Math.min(prev + 1, texts.length - 1);\n      }\n    });\n  }, [texts.length, loop]);\n\n  // Función para ir al texto anterior\n  const prevText = useCallback(() => {\n    setCurrentIndex(prev => {\n      if (loop) {\n        return prev === 0 ? texts.length - 1 : prev - 1;\n      } else {\n        return Math.max(prev - 1, 0);\n      }\n    });\n  }, [texts.length, loop]);\n\n  // Función para ir a un texto específico\n  const goToText = useCallback((index) => {\n    if (index >= 0 && index < texts.length) {\n      setCurrentIndex(index);\n    }\n  }, [texts.length]);\n\n  // Auto-rotate\n  useEffect(() => {\n    if (!isPlaying || texts.length <= 1) return;\n\n    const intervalId = setInterval(() => {\n      nextText();\n    }, interval);\n\n    return () => clearInterval(intervalId);\n  }, [isPlaying, interval, nextText, texts.length]);\n\n  // Pausar/reanudar\n  const pause = useCallback(() => setIsPlaying(false), []);\n  const play = useCallback(() => setIsPlaying(true), []);\n  const toggle = useCallback(() => setIsPlaying(prev => !prev), []);\n\n  // Reset\n  const reset = useCallback(() => {\n    setCurrentIndex(0);\n    setIsPlaying(autoStart);\n  }, [autoStart]);\n\n  return {\n    currentText: texts[currentIndex] || '',\n    currentIndex,\n    totalTexts: texts.length,\n    isPlaying,\n    nextText,\n    prevText,\n    goToText,\n    pause,\n    play,\n    toggle,\n    reset,\n    isFirst: currentIndex === 0,\n    isLast: currentIndex === texts.length - 1,\n    progress: texts.length > 0 ? (currentIndex + 1) / texts.length : 0\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}