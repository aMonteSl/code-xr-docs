{"ast":null,"code":"const EXTENSION_ID = 'aMonteSl.code-xr';\n\n// Función principal basada en tu ejemplo exacto\nasync function obtenerMetricasCodeXR() {\n  var _data$results$, _ref, _statsObj$installCoun, _statsObj$averageRati, _statsObj$ratingCount, _statsObj$downloads;\n  const url = 'https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery?api-version=3.0-preview.1';\n\n  // Body de la petición, filtrando por \"aMonteSl.code-xr\" y pidiendo estadísticas (flags = 256)\n  const body = {\n    filters: [{\n      criteria: [{\n        filterType: 7,\n        value: 'aMonteSl.code-xr' // Identificador completo de la extensión\n      }],\n      pageNumber: 1,\n      pageSize: 1\n    }],\n    flags: 256 // IncludeStatistics (descargas, instalaciones, rating)\n  };\n  console.log('🔍 Realizando petición exacta a la API para:', EXTENSION_ID);\n  console.log('📋 Body de la petición:', JSON.stringify(body, null, 2));\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json;api-version=3.0-preview.1'\n    },\n    body: JSON.stringify(body)\n  });\n  console.log('📡 Respuesta HTTP status:', response.status);\n  if (!response.ok) {\n    throw new Error(`Error al consultar API: ${response.status} ${response.statusText}`);\n  }\n  const data = await response.json();\n  console.log('📊 Datos completos de la API:', data);\n  const ext = (_data$results$ = data.results[0]) === null || _data$results$ === void 0 ? void 0 : _data$results$.extensions[0];\n  if (!ext) {\n    console.error('❌ La extensión Code-XR no fue encontrada en el Marketplace.');\n    throw new Error('La extensión Code-XR no fue encontrada en el Marketplace.');\n  }\n  console.log('✅ Extensión encontrada:', ext.extensionName);\n  console.log('📈 Estadísticas raw:', ext.statistics);\n\n  // Normalizar estadísticas a un objeto para extraer valores fácilmente\n  const statsObj = {};\n  for (const s of ext.statistics || []) {\n    statsObj[s.statisticName] = s.value;\n    console.log(`📊 Estadística: ${s.statisticName} = ${s.value}`);\n  }\n  console.log('🗺️ Objeto de estadísticas normalizado:', statsObj);\n  const result = {\n    totalInstalaciones: (_ref = (_statsObj$installCoun = statsObj.installCount) !== null && _statsObj$installCoun !== void 0 ? _statsObj$installCoun : statsObj.install) !== null && _ref !== void 0 ? _ref : 0,\n    promedioRating: (_statsObj$averageRati = statsObj.averageRating) !== null && _statsObj$averageRati !== void 0 ? _statsObj$averageRati : 0,\n    totalValoraciones: (_statsObj$ratingCount = statsObj.ratingCount) !== null && _statsObj$ratingCount !== void 0 ? _statsObj$ratingCount : 0,\n    totalDescargas: (_statsObj$downloads = statsObj.downloads) !== null && _statsObj$downloads !== void 0 ? _statsObj$downloads : 0\n  };\n  console.log('📈 Métricas finales extraídas:', result);\n  return result;\n}\n\n// Función de adaptación para mantener compatibilidad con el hook existente\nexport const getExtensionStats = async () => {\n  try {\n    console.log('🚀 Iniciando obtención de métricas con método exacto...');\n    const metrics = await obtenerMetricasCodeXR();\n    console.log('✅ Métricas de Code-XR obtenidas:', metrics);\n\n    // Adaptar al formato que espera el hook\n    const adaptedStats = {\n      downloads: metrics.totalDescargas,\n      installs: metrics.totalInstalaciones,\n      rating: metrics.promedioRating,\n      ratingCount: metrics.totalValoraciones,\n      version: '2.0.0',\n      // Versión fija ya que no está en las estadísticas\n      debug: {\n        rawMetrics: metrics,\n        source: 'exact-api-method'\n      }\n    };\n    console.log('🔄 Stats adaptadas para el hook:', adaptedStats);\n    return adaptedStats;\n  } catch (error) {\n    console.error('💥 Error obteniendo métricas:', error);\n\n    // Retornar valores fallback en caso de error\n    return {\n      downloads: 120,\n      installs: 38,\n      rating: 4.8,\n      ratingCount: 42,\n      version: '2.0.0',\n      error: error.message\n    };\n  }\n};\n\n// Exportar también la función original por si la necesitas\nexport { obtenerMetricasCodeXR };\n\n// Método de fallback (mantener por si acaso)\nexport const getStatsFromWebPage = async () => {\n  try {\n    console.log('🌐 Método de fallback: scraping web...');\n    const response = await fetch(`https://marketplace.visualstudio.com/items?itemName=${EXTENSION_ID}`, {\n      headers: {\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n      }\n    });\n    const html = await response.text();\n    console.log('📄 HTML obtenido para fallback, longitud:', html.length);\n\n    // Patrones básicos para fallback\n    const downloadMatch = html.match(/(\\d{1,3}(?:,\\d{3})*)\\s*(?:downloads?|installs?)/i);\n    const installMatch = html.match(/(\\d{1,3}(?:,\\d{3})*)\\s*(?:active|current)\\s*(?:installs?|users?)/i);\n    const downloads = downloadMatch ? parseInt(downloadMatch[1].replace(/,/g, '')) : null;\n    const installs = installMatch ? parseInt(installMatch[1].replace(/,/g, '')) : null;\n    console.log('📊 Resultados del fallback web scraping:', {\n      downloads,\n      installs\n    });\n    return {\n      downloads: downloads,\n      installs: installs,\n      source: 'web-scraping-fallback'\n    };\n  } catch (error) {\n    console.error('💥 Error en fallback web scraping:', error);\n    return null;\n  }\n};","map":{"version":3,"names":["EXTENSION_ID","obtenerMetricasCodeXR","_data$results$","_ref","_statsObj$installCoun","_statsObj$averageRati","_statsObj$ratingCount","_statsObj$downloads","url","body","filters","criteria","filterType","value","pageNumber","pageSize","flags","console","log","JSON","stringify","response","fetch","method","headers","status","ok","Error","statusText","data","json","ext","results","extensions","error","extensionName","statistics","statsObj","s","statisticName","result","totalInstalaciones","installCount","install","promedioRating","averageRating","totalValoraciones","ratingCount","totalDescargas","downloads","getExtensionStats","metrics","adaptedStats","installs","rating","version","debug","rawMetrics","source","message","getStatsFromWebPage","html","text","length","downloadMatch","match","installMatch","parseInt","replace"],"sources":["/home/adrian/web_code_xr/src/utils/marketplaceAPI.js"],"sourcesContent":["const EXTENSION_ID = 'aMonteSl.code-xr';\n\n// Función principal basada en tu ejemplo exacto\nasync function obtenerMetricasCodeXR() {\n  const url = 'https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery?api-version=3.0-preview.1';\n\n  // Body de la petición, filtrando por \"aMonteSl.code-xr\" y pidiendo estadísticas (flags = 256)\n  const body = {\n    filters: [\n      {\n        criteria: [\n          {\n            filterType: 7,\n            value: 'aMonteSl.code-xr'  // Identificador completo de la extensión\n          }\n        ],\n        pageNumber: 1,\n        pageSize: 1\n      }\n    ],\n    flags: 256 // IncludeStatistics (descargas, instalaciones, rating)\n  };\n\n  console.log('🔍 Realizando petición exacta a la API para:', EXTENSION_ID);\n  console.log('📋 Body de la petición:', JSON.stringify(body, null, 2));\n\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json;api-version=3.0-preview.1'\n    },\n    body: JSON.stringify(body)\n  });\n\n  console.log('📡 Respuesta HTTP status:', response.status);\n\n  if (!response.ok) {\n    throw new Error(`Error al consultar API: ${response.status} ${response.statusText}`);\n  }\n\n  const data = await response.json();\n  console.log('📊 Datos completos de la API:', data);\n  \n  const ext = data.results[0]?.extensions[0];\n  if (!ext) {\n    console.error('❌ La extensión Code-XR no fue encontrada en el Marketplace.');\n    throw new Error('La extensión Code-XR no fue encontrada en el Marketplace.');\n  }\n\n  console.log('✅ Extensión encontrada:', ext.extensionName);\n  console.log('📈 Estadísticas raw:', ext.statistics);\n\n  // Normalizar estadísticas a un objeto para extraer valores fácilmente\n  const statsObj = {};\n  for (const s of ext.statistics || []) {\n    statsObj[s.statisticName] = s.value;\n    console.log(`📊 Estadística: ${s.statisticName} = ${s.value}`);\n  }\n\n  console.log('🗺️ Objeto de estadísticas normalizado:', statsObj);\n\n  const result = {\n    totalInstalaciones: statsObj.installCount ?? statsObj.install ?? 0,\n    promedioRating: statsObj.averageRating ?? 0,\n    totalValoraciones: statsObj.ratingCount ?? 0,\n    totalDescargas: statsObj.downloads ?? 0\n  };\n\n  console.log('📈 Métricas finales extraídas:', result);\n\n  return result;\n}\n\n// Función de adaptación para mantener compatibilidad con el hook existente\nexport const getExtensionStats = async () => {\n  try {\n    console.log('🚀 Iniciando obtención de métricas con método exacto...');\n    \n    const metrics = await obtenerMetricasCodeXR();\n    \n    console.log('✅ Métricas de Code-XR obtenidas:', metrics);\n    \n    // Adaptar al formato que espera el hook\n    const adaptedStats = {\n      downloads: metrics.totalDescargas,\n      installs: metrics.totalInstalaciones,\n      rating: metrics.promedioRating,\n      ratingCount: metrics.totalValoraciones,\n      version: '2.0.0', // Versión fija ya que no está en las estadísticas\n      debug: {\n        rawMetrics: metrics,\n        source: 'exact-api-method'\n      }\n    };\n\n    console.log('🔄 Stats adaptadas para el hook:', adaptedStats);\n    \n    return adaptedStats;\n\n  } catch (error) {\n    console.error('💥 Error obteniendo métricas:', error);\n    \n    // Retornar valores fallback en caso de error\n    return {\n      downloads: 120,\n      installs: 38,\n      rating: 4.8,\n      ratingCount: 42,\n      version: '2.0.0',\n      error: error.message\n    };\n  }\n};\n\n// Exportar también la función original por si la necesitas\nexport { obtenerMetricasCodeXR };\n\n// Método de fallback (mantener por si acaso)\nexport const getStatsFromWebPage = async () => {\n  try {\n    console.log('🌐 Método de fallback: scraping web...');\n    \n    const response = await fetch(\n      `https://marketplace.visualstudio.com/items?itemName=${EXTENSION_ID}`,\n      {\n        headers: {\n          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n        }\n      }\n    );\n    \n    const html = await response.text();\n    console.log('📄 HTML obtenido para fallback, longitud:', html.length);\n\n    // Patrones básicos para fallback\n    const downloadMatch = html.match(/(\\d{1,3}(?:,\\d{3})*)\\s*(?:downloads?|installs?)/i);\n    const installMatch = html.match(/(\\d{1,3}(?:,\\d{3})*)\\s*(?:active|current)\\s*(?:installs?|users?)/i);\n\n    const downloads = downloadMatch ? parseInt(downloadMatch[1].replace(/,/g, '')) : null;\n    const installs = installMatch ? parseInt(installMatch[1].replace(/,/g, '')) : null;\n\n    console.log('📊 Resultados del fallback web scraping:', { downloads, installs });\n\n    return {\n      downloads: downloads,\n      installs: installs,\n      source: 'web-scraping-fallback'\n    };\n\n  } catch (error) {\n    console.error('💥 Error en fallback web scraping:', error);\n    return null;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}