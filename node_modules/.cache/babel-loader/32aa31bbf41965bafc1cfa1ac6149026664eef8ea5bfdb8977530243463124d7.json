{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getExtensionStats, debugAPIFlags } from '../utils/marketplaceAPI';\nexport const useExtensionStats = () => {\n  _s();\n  const [stats, setStats] = useState({\n    downloads: null,\n    installs: null,\n    rating: null,\n    ratingCount: null,\n    version: null,\n    loading: true,\n    error: null\n  });\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        console.log('🚀 Iniciando fetch con API v7.0 optimizada...');\n        setStats(prev => ({\n          ...prev,\n          loading: true,\n          error: null\n        }));\n\n        // DEBUG: Solo en desarrollo, probar diferentes flags\n        if (process.env.NODE_ENV === 'development' && window.location.search.includes('debug=flags')) {\n          console.log('🧪 Modo DEBUG activado - Probando diferentes flags...');\n          await debugAPIFlags();\n        }\n        const data = await getExtensionStats();\n        if (data && !data.error) {\n          console.log('✅ Datos recibidos del método v7.0:', data);\n          console.log('🏷️ Versión recibida en hook v7.0:', data.version, '(tipo:', typeof data.version, ')');\n          console.log('📊 Debug info:', data.debug);\n          const newStats = {\n            downloads: data.downloads && data.downloads > 0 ? data.downloads : null,\n            installs: data.installs && data.installs > 0 ? data.installs : null,\n            rating: data.rating && data.rating > 0 ? Math.round(data.rating * 10) / 10 : null,\n            ratingCount: data.ratingCount && data.ratingCount > 0 ? data.ratingCount : null,\n            version: data.version || null,\n            loading: false,\n            error: null,\n            debug: data.debug\n          };\n          console.log('📈 Stats finales aplicadas v7.0:', newStats);\n          console.log('🔍 Comparación detallada v7.0:');\n          console.log(`  Downloads: ${stats.downloads} → ${newStats.downloads} ${newStats.downloads ? '✅' : '❌'}`);\n          console.log(`  Installs: ${stats.installs} → ${newStats.installs} ${newStats.installs ? '✅' : '❌'}`);\n          console.log(`  Rating: ${stats.rating} → ${newStats.rating} ${newStats.rating ? '✅' : '❌'}`);\n          console.log(`  Rating Count: ${stats.ratingCount} → ${newStats.ratingCount} ${newStats.ratingCount ? '✅' : '❌'}`);\n          console.log(`  Version: \"${stats.version}\" → \"${newStats.version}\" ${newStats.version ? '✅' : '❌'}`);\n          setStats(newStats);\n        } else {\n          console.warn('⚠️ Error en datos v7.0 o sin datos, manteniendo valores null');\n          setStats(prev => ({\n            ...prev,\n            loading: false,\n            error: (data === null || data === void 0 ? void 0 : data.error) || 'No data received from v7.0 API'\n          }));\n        }\n      } catch (error) {\n        console.error('💥 Error en hook v7.0:', error);\n        setStats(prev => ({\n          ...prev,\n          loading: false,\n          error: 'Failed to load stats from v7.0 API'\n        }));\n      }\n    };\n    fetchStats();\n\n    // Actualizar cada 5 minutos (más frecuente para testing)\n    const interval = setInterval(fetchStats, 5 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return stats;\n};\n_s(useExtensionStats, \"/2omgquYpPb8CyGakX6GREu7bo8=\");","map":{"version":3,"names":["useState","useEffect","getExtensionStats","debugAPIFlags","useExtensionStats","_s","stats","setStats","downloads","installs","rating","ratingCount","version","loading","error","fetchStats","console","log","prev","process","env","NODE_ENV","window","location","search","includes","data","debug","newStats","Math","round","warn","interval","setInterval","clearInterval"],"sources":["/home/adrian/web_code_xr/src/hooks/useExtensionStats.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getExtensionStats, debugAPIFlags } from '../utils/marketplaceAPI';\n\nexport const useExtensionStats = () => {\n  const [stats, setStats] = useState({\n    downloads: null,\n    installs: null,\n    rating: null,\n    ratingCount: null,\n    version: null,\n    loading: true,\n    error: null\n  });\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        console.log('🚀 Iniciando fetch con API v7.0 optimizada...');\n        setStats(prev => ({ ...prev, loading: true, error: null }));\n        \n        // DEBUG: Solo en desarrollo, probar diferentes flags\n        if (process.env.NODE_ENV === 'development' && window.location.search.includes('debug=flags')) {\n          console.log('🧪 Modo DEBUG activado - Probando diferentes flags...');\n          await debugAPIFlags();\n        }\n        \n        const data = await getExtensionStats();\n        \n        if (data && !data.error) {\n          console.log('✅ Datos recibidos del método v7.0:', data);\n          console.log('🏷️ Versión recibida en hook v7.0:', data.version, '(tipo:', typeof data.version, ')');\n          console.log('📊 Debug info:', data.debug);\n          \n          const newStats = {\n            downloads: (data.downloads && data.downloads > 0) ? data.downloads : null,\n            installs: (data.installs && data.installs > 0) ? data.installs : null,\n            rating: (data.rating && data.rating > 0) ? Math.round(data.rating * 10) / 10 : null,\n            ratingCount: (data.ratingCount && data.ratingCount > 0) ? data.ratingCount : null,\n            version: data.version || null,\n            loading: false,\n            error: null,\n            debug: data.debug\n          };\n\n          console.log('📈 Stats finales aplicadas v7.0:', newStats);\n          console.log('🔍 Comparación detallada v7.0:');\n          console.log(`  Downloads: ${stats.downloads} → ${newStats.downloads} ${newStats.downloads ? '✅' : '❌'}`);\n          console.log(`  Installs: ${stats.installs} → ${newStats.installs} ${newStats.installs ? '✅' : '❌'}`);\n          console.log(`  Rating: ${stats.rating} → ${newStats.rating} ${newStats.rating ? '✅' : '❌'}`);\n          console.log(`  Rating Count: ${stats.ratingCount} → ${newStats.ratingCount} ${newStats.ratingCount ? '✅' : '❌'}`);\n          console.log(`  Version: \"${stats.version}\" → \"${newStats.version}\" ${newStats.version ? '✅' : '❌'}`);\n          \n          setStats(newStats);\n        } else {\n          console.warn('⚠️ Error en datos v7.0 o sin datos, manteniendo valores null');\n          setStats(prev => ({ \n            ...prev, \n            loading: false,\n            error: data?.error || 'No data received from v7.0 API'\n          }));\n        }\n      } catch (error) {\n        console.error('💥 Error en hook v7.0:', error);\n        setStats(prev => ({\n          ...prev,\n          loading: false,\n          error: 'Failed to load stats from v7.0 API'\n        }));\n      }\n    };\n\n    fetchStats();\n    \n    // Actualizar cada 5 minutos (más frecuente para testing)\n    const interval = setInterval(fetchStats, 5 * 60 * 1000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  return stats;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}