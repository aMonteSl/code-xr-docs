{"ast":null,"code":"const EXTENSION_ID = 'aMonteSl.code-xr';\n\n// Función principal actualizada con tu método optimizado\nasync function obtenerVersionYMetricasCodeXR() {\n  var _data$results$, _versionObj$version;\n  const url = 'https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery?api-version=7.0-preview.1';\n  const body = {\n    filters: [{\n      criteria: [{\n        filterType: 7,\n        value: 'aMonteSl.code-xr' // Identificador completo de la extensión\n      }],\n      pageNumber: 1,\n      pageSize: 1\n    }],\n    flags: ['IncludeStatistics',\n    // trae descargas, instalaciones, rating\n    'IncludeLatestVersionOnly',\n    // solo estadística de la última versión\n    'IncludeVersions' // incluye el array \"versions\" con info de versiones\n    ]\n  };\n  console.log('🔍 NUEVA API v7.0 - Realizando petición optimizada para:', EXTENSION_ID);\n  console.log('📋 Body de la petición v7.0:', JSON.stringify(body, null, 2));\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json;api-version=7.0-preview.1'\n    },\n    body: JSON.stringify(body)\n  });\n  console.log('📡 Respuesta HTTP status v7.0:', response.status);\n  if (!response.ok) {\n    throw new Error(`Error al consultar API: ${response.status} ${response.statusText}`);\n  }\n  const data = await response.json();\n  console.log('📊 Datos completos de la API v7.0:', data);\n  const ext = (_data$results$ = data.results[0]) === null || _data$results$ === void 0 ? void 0 : _data$results$.extensions[0];\n  if (!ext) {\n    console.error('❌ La extensión Code-XR no fue encontrada en el Marketplace.');\n    throw new Error('La extensión Code-XR no fue encontrada en el Marketplace.');\n  }\n  console.log('✅ Extensión encontrada v7.0:', ext.extensionName);\n  console.log('📈 Estadísticas raw v7.0:', ext.statistics);\n  console.log('📦 Versiones raw v7.0:', ext.versions);\n\n  // 🔍 DEPURACIÓN ESPECÍFICA DE VERSIONES v7.0\n  console.log('🏷️ DEPURACIÓN DE VERSIONES v7.0:');\n  console.log('📦 ¿Existe ext.versions?', !!ext.versions);\n  console.log('📦 Tipo de ext.versions:', typeof ext.versions);\n  console.log('📦 Es array ext.versions?', Array.isArray(ext.versions));\n  if (ext.versions) {\n    console.log('📦 Longitud del array versions:', ext.versions.length);\n\n    // Mostrar cada versión con detalle\n    ext.versions.forEach((version, index) => {\n      console.log(`📦 Versión ${index} completa:`, version);\n      console.log(`📦 Versión ${index} - version:`, version.version);\n      console.log(`📦 Versión ${index} - lastUpdated:`, version.lastUpdated);\n      console.log(`📦 Versión ${index} - properties:`, version.properties);\n    });\n  } else {\n    console.log('❌ ext.versions NO existe en v7.0');\n  }\n\n  // 1. Recuperar la versión más reciente usando tu método:\n  const versionObj = Array.isArray(ext.versions) && ext.versions[0];\n  const versionActual = (_versionObj$version = versionObj === null || versionObj === void 0 ? void 0 : versionObj.version) !== null && _versionObj$version !== void 0 ? _versionObj$version : null;\n  console.log('🏷️ VERSION OBJECT v7.0:', versionObj);\n  console.log('🏷️ VERSION ACTUAL EXTRAÍDA v7.0:', versionActual);\n\n  // 2. Normalizar estadísticas a un objeto para extraer valores fácilmente\n  const statsObj = {};\n  for (const s of ext.statistics || []) {\n    statsObj[s.statisticName] = s.value;\n    console.log(`📊 Estadística v7.0: \"${s.statisticName}\" = ${s.value} (tipo: ${typeof s.value})`);\n  }\n  console.log('🗺️ Objeto de estadísticas normalizado v7.0:', statsObj);\n\n  // Buscar estadísticas con múltiples nombres posibles\n  const findStatValue = (possibleNames, logPrefix) => {\n    console.log(`🔍 ${logPrefix} v7.0 - Buscando entre:`, possibleNames);\n    for (const name of possibleNames) {\n      if (statsObj[name] !== undefined && statsObj[name] !== null) {\n        console.log(`✅ ${logPrefix} v7.0 - Encontrado con \"${name}\": ${statsObj[name]}`);\n        return Number(statsObj[name]);\n      }\n    }\n    console.log(`❌ ${logPrefix} v7.0 - No encontrado en ninguna variante`);\n    return null;\n  };\n\n  // Usar tu mapeo exacto + variantes adicionales\n  const totalInstalaciones = findStatValue(['installCount', 'install', 'activeInstalls', 'currentInstalls'], 'INSTALACIONES');\n  const promedioRating = findStatValue(['averageRating', 'rating', 'averageScore', 'score'], 'RATING');\n  const totalValoraciones = findStatValue(['ratingCount', 'reviewCount', 'ratingsCount', 'totalRatings'], 'VALORACIONES');\n  const totalDescargas = findStatValue(['downloads', 'downloadCount', 'totalDownloads', 'install', 'installCount'], 'DESCARGAS');\n  const result = {\n    version: versionActual,\n    totalInstalaciones: totalInstalaciones,\n    promedioRating: promedioRating,\n    totalValoraciones: totalValoraciones,\n    totalDescargas: totalDescargas\n  };\n  console.log('📈 Métricas finales extraídas v7.0:', result);\n  console.log('🔍 RESUMEN COMPLETO v7.0:');\n  console.log(`  Version: \"${versionActual}\" ${versionActual ? '✅' : '❌'}`);\n  console.log(`  Downloads: ${totalDescargas} ${totalDescargas ? '✅' : '❌'}`);\n  console.log(`  Active Installs: ${totalInstalaciones} ${totalInstalaciones ? '✅' : '❌'}`);\n  console.log(`  Rating: ${promedioRating} ${promedioRating ? '✅' : '❌'}`);\n  console.log(`  Rating Count: ${totalValoraciones} ${totalValoraciones ? '✅' : '❌'}`);\n  return result;\n}\n\n// Función de adaptación para mantener compatibilidad con el hook existente\nexport const getExtensionStats = async () => {\n  try {\n    console.log('🚀 Iniciando obtención con API v7.0 optimizada...');\n    const metrics = await obtenerVersionYMetricasCodeXR();\n    console.log('✅ Métricas v7.0 de Code-XR obtenidas:', metrics);\n\n    // Adaptar al formato que espera el hook\n    const adaptedStats = {\n      downloads: metrics.totalDescargas,\n      installs: metrics.totalInstalaciones,\n      rating: metrics.promedioRating,\n      ratingCount: metrics.totalValoraciones,\n      version: metrics.version,\n      // ✨ VERSIÓN REAL DE LA API v7.0\n      debug: {\n        rawMetrics: metrics,\n        source: 'api-v7.0-optimized',\n        timestamp: new Date().toISOString()\n      }\n    };\n    console.log('🔄 Stats adaptadas para el hook v7.0:', adaptedStats);\n    return adaptedStats;\n  } catch (error) {\n    console.error('💥 Error obteniendo métricas v7.0:', error);\n\n    // Intentar fallback con v3.0 anterior\n    console.log('🔄 Intentando fallback con API v3.0...');\n    try {\n      const fallbackStats = await getExtensionStatsV3Fallback();\n      if (fallbackStats) {\n        console.log('✅ Fallback v3.0 exitoso:', fallbackStats);\n        return fallbackStats;\n      }\n    } catch (fallbackError) {\n      console.error('💥 Error en fallback v3.0:', fallbackError);\n    }\n\n    // Retornar valores null en caso de error total\n    return {\n      downloads: null,\n      installs: null,\n      rating: null,\n      ratingCount: null,\n      version: null,\n      error: error.message,\n      debug: {\n        source: 'error-fallback',\n        timestamp: new Date().toISOString()\n      }\n    };\n  }\n};\n\n// Función de fallback con la API v3.0 anterior (por si v7.0 falla)\nasync function getExtensionStatsV3Fallback() {\n  try {\n    var _data$results, _data$results$2, _data$results$2$exten, _ext$versions, _ext$versions$;\n    console.log('🔄 Ejecutando fallback v3.0...');\n    const response = await fetch('https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery?api-version=3.0-preview.1', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json;api-version=3.0-preview.1'\n      },\n      body: JSON.stringify({\n        filters: [{\n          criteria: [{\n            filterType: 7,\n            value: 'aMonteSl.code-xr'\n          }],\n          pageNumber: 1,\n          pageSize: 1\n        }],\n        flags: 256\n      })\n    });\n    const data = await response.json();\n    const ext = (_data$results = data.results) === null || _data$results === void 0 ? void 0 : (_data$results$2 = _data$results[0]) === null || _data$results$2 === void 0 ? void 0 : (_data$results$2$exten = _data$results$2.extensions) === null || _data$results$2$exten === void 0 ? void 0 : _data$results$2$exten[0];\n    if (!ext) {\n      throw new Error('Extension not found in v3.0 fallback');\n    }\n    const statsObj = {};\n    for (const s of ext.statistics || []) {\n      statsObj[s.statisticName] = s.value;\n    }\n    const latestVersion = ((_ext$versions = ext.versions) === null || _ext$versions === void 0 ? void 0 : (_ext$versions$ = _ext$versions[0]) === null || _ext$versions$ === void 0 ? void 0 : _ext$versions$.version) || null;\n    return {\n      downloads: statsObj.downloads || statsObj.install || null,\n      installs: statsObj.install || statsObj.installCount || null,\n      rating: statsObj.averageRating || null,\n      ratingCount: statsObj.ratingCount || null,\n      version: latestVersion,\n      debug: {\n        source: 'api-v3.0-fallback',\n        timestamp: new Date().toISOString()\n      }\n    };\n  } catch (error) {\n    console.error('💥 Error en fallback v3.0:', error);\n    return null;\n  }\n}\n\n// Exportar también la función principal por si la necesitas\nexport { obtenerVersionYMetricasCodeXR };\n\n// Función de depuración para probar diferentes flags\nexport const debugAPIFlags = async () => {\n  console.log('🧪 DEBUGGING: Probando diferentes combinaciones de flags...');\n  const flagCombinations = [{\n    name: 'v7.0 - Solo Statistics',\n    api: '7.0-preview.1',\n    flags: ['IncludeStatistics']\n  }, {\n    name: 'v7.0 - Statistics + Versions',\n    api: '7.0-preview.1',\n    flags: ['IncludeStatistics', 'IncludeVersions']\n  }, {\n    name: 'v7.0 - Statistics + LatestVersionOnly',\n    api: '7.0-preview.1',\n    flags: ['IncludeStatistics', 'IncludeLatestVersionOnly']\n  }, {\n    name: 'v7.0 - Todas las flags (tu método)',\n    api: '7.0-preview.1',\n    flags: ['IncludeStatistics', 'IncludeLatestVersionOnly', 'IncludeVersions']\n  }, {\n    name: 'v3.0 - Flag 256',\n    api: '3.0-preview.1',\n    flags: 256\n  }];\n  for (const combo of flagCombinations) {\n    try {\n      var _data$results2, _data$results2$, _data$results2$$exten;\n      console.log(`\\n🧪 Probando: ${combo.name}`);\n      const body = {\n        filters: [{\n          criteria: [{\n            filterType: 7,\n            value: 'aMonteSl.code-xr'\n          }],\n          pageNumber: 1,\n          pageSize: 1\n        }],\n        flags: combo.flags\n      };\n      const response = await fetch(`https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery?api-version=${combo.api}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': `application/json;api-version=${combo.api}`\n        },\n        body: JSON.stringify(body)\n      });\n      const data = await response.json();\n      const ext = (_data$results2 = data.results) === null || _data$results2 === void 0 ? void 0 : (_data$results2$ = _data$results2[0]) === null || _data$results2$ === void 0 ? void 0 : (_data$results2$$exten = _data$results2$.extensions) === null || _data$results2$$exten === void 0 ? void 0 : _data$results2$$exten[0];\n      if (ext) {\n        var _ext$statistics, _ext$versions2, _ext$versions3, _ext$statistics2;\n        console.log(`📊 ${combo.name} - Estadísticas:`, ((_ext$statistics = ext.statistics) === null || _ext$statistics === void 0 ? void 0 : _ext$statistics.length) || 0, 'items');\n        console.log(`📦 ${combo.name} - Versiones:`, ((_ext$versions2 = ext.versions) === null || _ext$versions2 === void 0 ? void 0 : _ext$versions2.length) || 0, 'items');\n        if (((_ext$versions3 = ext.versions) === null || _ext$versions3 === void 0 ? void 0 : _ext$versions3.length) > 0) {\n          console.log(`🏷️ ${combo.name} - Primera versión:`, ext.versions[0].version);\n        }\n        if (((_ext$statistics2 = ext.statistics) === null || _ext$statistics2 === void 0 ? void 0 : _ext$statistics2.length) > 0) {\n          ext.statistics.slice(0, 3).forEach(stat => {\n            console.log(`  📈 ${stat.statisticName}: ${stat.value}`);\n          });\n        }\n      } else {\n        console.log(`❌ ${combo.name} - Sin extensión encontrada`);\n      }\n\n      // Pausa entre requests\n      await new Promise(resolve => setTimeout(resolve, 500));\n    } catch (error) {\n      console.error(`💥 Error en ${combo.name}:`, error.message);\n    }\n  }\n};","map":{"version":3,"names":["EXTENSION_ID","obtenerVersionYMetricasCodeXR","_data$results$","_versionObj$version","url","body","filters","criteria","filterType","value","pageNumber","pageSize","flags","console","log","JSON","stringify","response","fetch","method","headers","status","ok","Error","statusText","data","json","ext","results","extensions","error","extensionName","statistics","versions","Array","isArray","length","forEach","version","index","lastUpdated","properties","versionObj","versionActual","statsObj","s","statisticName","findStatValue","possibleNames","logPrefix","name","undefined","Number","totalInstalaciones","promedioRating","totalValoraciones","totalDescargas","result","getExtensionStats","metrics","adaptedStats","downloads","installs","rating","ratingCount","debug","rawMetrics","source","timestamp","Date","toISOString","fallbackStats","getExtensionStatsV3Fallback","fallbackError","message","_data$results","_data$results$2","_data$results$2$exten","_ext$versions","_ext$versions$","latestVersion","install","installCount","averageRating","debugAPIFlags","flagCombinations","api","combo","_data$results2","_data$results2$","_data$results2$$exten","_ext$statistics","_ext$versions2","_ext$versions3","_ext$statistics2","slice","stat","Promise","resolve","setTimeout"],"sources":["/home/adrian/web_code_xr/src/utils/marketplaceAPI.js"],"sourcesContent":["const EXTENSION_ID = 'aMonteSl.code-xr';\n\n// Función principal actualizada con tu método optimizado\nasync function obtenerVersionYMetricasCodeXR() {\n  const url = 'https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery?api-version=7.0-preview.1';\n\n  const body = {\n    filters: [\n      {\n        criteria: [\n          {\n            filterType: 7,\n            value: 'aMonteSl.code-xr'  // Identificador completo de la extensión\n          }\n        ],\n        pageNumber: 1,\n        pageSize: 1\n      }\n    ],\n    flags: [\n      'IncludeStatistics',        // trae descargas, instalaciones, rating\n      'IncludeLatestVersionOnly', // solo estadística de la última versión\n      'IncludeVersions'           // incluye el array \"versions\" con info de versiones\n    ]\n  };\n\n  console.log('🔍 NUEVA API v7.0 - Realizando petición optimizada para:', EXTENSION_ID);\n  console.log('📋 Body de la petición v7.0:', JSON.stringify(body, null, 2));\n\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json;api-version=7.0-preview.1'\n    },\n    body: JSON.stringify(body)\n  });\n\n  console.log('📡 Respuesta HTTP status v7.0:', response.status);\n\n  if (!response.ok) {\n    throw new Error(`Error al consultar API: ${response.status} ${response.statusText}`);\n  }\n\n  const data = await response.json();\n  console.log('📊 Datos completos de la API v7.0:', data);\n  \n  const ext = data.results[0]?.extensions[0];\n  if (!ext) {\n    console.error('❌ La extensión Code-XR no fue encontrada en el Marketplace.');\n    throw new Error('La extensión Code-XR no fue encontrada en el Marketplace.');\n  }\n\n  console.log('✅ Extensión encontrada v7.0:', ext.extensionName);\n  console.log('📈 Estadísticas raw v7.0:', ext.statistics);\n  console.log('📦 Versiones raw v7.0:', ext.versions);\n\n  // 🔍 DEPURACIÓN ESPECÍFICA DE VERSIONES v7.0\n  console.log('🏷️ DEPURACIÓN DE VERSIONES v7.0:');\n  console.log('📦 ¿Existe ext.versions?', !!ext.versions);\n  console.log('📦 Tipo de ext.versions:', typeof ext.versions);\n  console.log('📦 Es array ext.versions?', Array.isArray(ext.versions));\n  \n  if (ext.versions) {\n    console.log('📦 Longitud del array versions:', ext.versions.length);\n    \n    // Mostrar cada versión con detalle\n    ext.versions.forEach((version, index) => {\n      console.log(`📦 Versión ${index} completa:`, version);\n      console.log(`📦 Versión ${index} - version:`, version.version);\n      console.log(`📦 Versión ${index} - lastUpdated:`, version.lastUpdated);\n      console.log(`📦 Versión ${index} - properties:`, version.properties);\n    });\n  } else {\n    console.log('❌ ext.versions NO existe en v7.0');\n  }\n\n  // 1. Recuperar la versión más reciente usando tu método:\n  const versionObj = Array.isArray(ext.versions) && ext.versions[0];\n  const versionActual = versionObj?.version ?? null;\n  \n  console.log('🏷️ VERSION OBJECT v7.0:', versionObj);\n  console.log('🏷️ VERSION ACTUAL EXTRAÍDA v7.0:', versionActual);\n\n  // 2. Normalizar estadísticas a un objeto para extraer valores fácilmente\n  const statsObj = {};\n  for (const s of ext.statistics || []) {\n    statsObj[s.statisticName] = s.value;\n    console.log(`📊 Estadística v7.0: \"${s.statisticName}\" = ${s.value} (tipo: ${typeof s.value})`);\n  }\n\n  console.log('🗺️ Objeto de estadísticas normalizado v7.0:', statsObj);\n\n  // Buscar estadísticas con múltiples nombres posibles\n  const findStatValue = (possibleNames, logPrefix) => {\n    console.log(`🔍 ${logPrefix} v7.0 - Buscando entre:`, possibleNames);\n    \n    for (const name of possibleNames) {\n      if (statsObj[name] !== undefined && statsObj[name] !== null) {\n        console.log(`✅ ${logPrefix} v7.0 - Encontrado con \"${name}\": ${statsObj[name]}`);\n        return Number(statsObj[name]);\n      }\n    }\n    \n    console.log(`❌ ${logPrefix} v7.0 - No encontrado en ninguna variante`);\n    return null;\n  };\n\n  // Usar tu mapeo exacto + variantes adicionales\n  const totalInstalaciones = findStatValue([\n    'installCount', 'install', 'activeInstalls', 'currentInstalls'\n  ], 'INSTALACIONES');\n\n  const promedioRating = findStatValue([\n    'averageRating', 'rating', 'averageScore', 'score'\n  ], 'RATING');\n\n  const totalValoraciones = findStatValue([\n    'ratingCount', 'reviewCount', 'ratingsCount', 'totalRatings'\n  ], 'VALORACIONES');\n\n  const totalDescargas = findStatValue([\n    'downloads', 'downloadCount', 'totalDownloads', 'install', 'installCount'\n  ], 'DESCARGAS');\n\n  const result = {\n    version: versionActual,\n    totalInstalaciones: totalInstalaciones,\n    promedioRating: promedioRating,\n    totalValoraciones: totalValoraciones,\n    totalDescargas: totalDescargas\n  };\n\n  console.log('📈 Métricas finales extraídas v7.0:', result);\n  console.log('🔍 RESUMEN COMPLETO v7.0:');\n  console.log(`  Version: \"${versionActual}\" ${versionActual ? '✅' : '❌'}`);\n  console.log(`  Downloads: ${totalDescargas} ${totalDescargas ? '✅' : '❌'}`);\n  console.log(`  Active Installs: ${totalInstalaciones} ${totalInstalaciones ? '✅' : '❌'}`);\n  console.log(`  Rating: ${promedioRating} ${promedioRating ? '✅' : '❌'}`);\n  console.log(`  Rating Count: ${totalValoraciones} ${totalValoraciones ? '✅' : '❌'}`);\n\n  return result;\n}\n\n// Función de adaptación para mantener compatibilidad con el hook existente\nexport const getExtensionStats = async () => {\n  try {\n    console.log('🚀 Iniciando obtención con API v7.0 optimizada...');\n    \n    const metrics = await obtenerVersionYMetricasCodeXR();\n    \n    console.log('✅ Métricas v7.0 de Code-XR obtenidas:', metrics);\n    \n    // Adaptar al formato que espera el hook\n    const adaptedStats = {\n      downloads: metrics.totalDescargas,\n      installs: metrics.totalInstalaciones,\n      rating: metrics.promedioRating,\n      ratingCount: metrics.totalValoraciones,\n      version: metrics.version, // ✨ VERSIÓN REAL DE LA API v7.0\n      debug: {\n        rawMetrics: metrics,\n        source: 'api-v7.0-optimized',\n        timestamp: new Date().toISOString()\n      }\n    };\n\n    console.log('🔄 Stats adaptadas para el hook v7.0:', adaptedStats);\n    \n    return adaptedStats;\n\n  } catch (error) {\n    console.error('💥 Error obteniendo métricas v7.0:', error);\n    \n    // Intentar fallback con v3.0 anterior\n    console.log('🔄 Intentando fallback con API v3.0...');\n    try {\n      const fallbackStats = await getExtensionStatsV3Fallback();\n      if (fallbackStats) {\n        console.log('✅ Fallback v3.0 exitoso:', fallbackStats);\n        return fallbackStats;\n      }\n    } catch (fallbackError) {\n      console.error('💥 Error en fallback v3.0:', fallbackError);\n    }\n    \n    // Retornar valores null en caso de error total\n    return {\n      downloads: null,\n      installs: null,\n      rating: null,\n      ratingCount: null,\n      version: null,\n      error: error.message,\n      debug: {\n        source: 'error-fallback',\n        timestamp: new Date().toISOString()\n      }\n    };\n  }\n};\n\n// Función de fallback con la API v3.0 anterior (por si v7.0 falla)\nasync function getExtensionStatsV3Fallback() {\n  try {\n    console.log('🔄 Ejecutando fallback v3.0...');\n    \n    const response = await fetch('https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery?api-version=3.0-preview.1', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json;api-version=3.0-preview.1'\n      },\n      body: JSON.stringify({\n        filters: [{\n          criteria: [{\n            filterType: 7,\n            value: 'aMonteSl.code-xr'\n          }],\n          pageNumber: 1,\n          pageSize: 1\n        }],\n        flags: 256\n      })\n    });\n\n    const data = await response.json();\n    const ext = data.results?.[0]?.extensions?.[0];\n    \n    if (!ext) {\n      throw new Error('Extension not found in v3.0 fallback');\n    }\n\n    const statsObj = {};\n    for (const s of ext.statistics || []) {\n      statsObj[s.statisticName] = s.value;\n    }\n\n    const latestVersion = ext.versions?.[0]?.version || null;\n\n    return {\n      downloads: statsObj.downloads || statsObj.install || null,\n      installs: statsObj.install || statsObj.installCount || null,\n      rating: statsObj.averageRating || null,\n      ratingCount: statsObj.ratingCount || null,\n      version: latestVersion,\n      debug: {\n        source: 'api-v3.0-fallback',\n        timestamp: new Date().toISOString()\n      }\n    };\n\n  } catch (error) {\n    console.error('💥 Error en fallback v3.0:', error);\n    return null;\n  }\n}\n\n// Exportar también la función principal por si la necesitas\nexport { obtenerVersionYMetricasCodeXR };\n\n// Función de depuración para probar diferentes flags\nexport const debugAPIFlags = async () => {\n  console.log('🧪 DEBUGGING: Probando diferentes combinaciones de flags...');\n  \n  const flagCombinations = [\n    {\n      name: 'v7.0 - Solo Statistics',\n      api: '7.0-preview.1',\n      flags: ['IncludeStatistics']\n    },\n    {\n      name: 'v7.0 - Statistics + Versions',\n      api: '7.0-preview.1',\n      flags: ['IncludeStatistics', 'IncludeVersions']\n    },\n    {\n      name: 'v7.0 - Statistics + LatestVersionOnly',\n      api: '7.0-preview.1',\n      flags: ['IncludeStatistics', 'IncludeLatestVersionOnly']\n    },\n    {\n      name: 'v7.0 - Todas las flags (tu método)',\n      api: '7.0-preview.1',\n      flags: ['IncludeStatistics', 'IncludeLatestVersionOnly', 'IncludeVersions']\n    },\n    {\n      name: 'v3.0 - Flag 256',\n      api: '3.0-preview.1',\n      flags: 256\n    }\n  ];\n\n  for (const combo of flagCombinations) {\n    try {\n      console.log(`\\n🧪 Probando: ${combo.name}`);\n      \n      const body = {\n        filters: [{\n          criteria: [{\n            filterType: 7,\n            value: 'aMonteSl.code-xr'\n          }],\n          pageNumber: 1,\n          pageSize: 1\n        }],\n        flags: combo.flags\n      };\n\n      const response = await fetch(`https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery?api-version=${combo.api}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': `application/json;api-version=${combo.api}`\n        },\n        body: JSON.stringify(body)\n      });\n\n      const data = await response.json();\n      const ext = data.results?.[0]?.extensions?.[0];\n      \n      if (ext) {\n        console.log(`📊 ${combo.name} - Estadísticas:`, ext.statistics?.length || 0, 'items');\n        console.log(`📦 ${combo.name} - Versiones:`, ext.versions?.length || 0, 'items');\n        \n        if (ext.versions?.length > 0) {\n          console.log(`🏷️ ${combo.name} - Primera versión:`, ext.versions[0].version);\n        }\n        \n        if (ext.statistics?.length > 0) {\n          ext.statistics.slice(0, 3).forEach(stat => {\n            console.log(`  📈 ${stat.statisticName}: ${stat.value}`);\n          });\n        }\n      } else {\n        console.log(`❌ ${combo.name} - Sin extensión encontrada`);\n      }\n      \n      // Pausa entre requests\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n    } catch (error) {\n      console.error(`💥 Error en ${combo.name}:`, error.message);\n    }\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}