{"ast":null,"code":"const EXTENSION_ID = 'aMonteSl.code-xr';\nconst MARKETPLACE_API = 'https://marketplace.visualstudio.com/_apis/public/gallery';\n\n// Funci√≥n para obtener datos b√°sicos de la extensi√≥n\nexport const getExtensionStats = async () => {\n  try {\n    var _data$results, _data$results$, _data$results$$extens;\n    console.log('üîç Iniciando b√∫squeda de estad√≠sticas para:', EXTENSION_ID);\n    const response = await fetch(`${MARKETPLACE_API}/extensionquery`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json;api-version=3.0-preview.1'\n      },\n      body: JSON.stringify({\n        filters: [{\n          criteria: [{\n            filterType: 7,\n            value: EXTENSION_ID\n          }]\n        }],\n        flags: 914 // Incluye estad√≠sticas completas\n      })\n    });\n    console.log('üì° Respuesta de la API recibida, status:', response.status);\n    const data = await response.json();\n    console.log('üìä Datos JSON completos de la API:', data);\n    const extension = (_data$results = data.results) === null || _data$results === void 0 ? void 0 : (_data$results$ = _data$results[0]) === null || _data$results$ === void 0 ? void 0 : (_data$results$$extens = _data$results$.extensions) === null || _data$results$$extens === void 0 ? void 0 : _data$results$$extens[0];\n    if (!extension) {\n      var _data$results2, _data$results3, _data$results3$, _data$results3$$exten;\n      console.error('‚ùå No se encontr√≥ la extensi√≥n en los resultados');\n      console.log('üîç Estructura de respuesta:', {\n        results: (_data$results2 = data.results) === null || _data$results2 === void 0 ? void 0 : _data$results2.length,\n        extensions: (_data$results3 = data.results) === null || _data$results3 === void 0 ? void 0 : (_data$results3$ = _data$results3[0]) === null || _data$results3$ === void 0 ? void 0 : (_data$results3$$exten = _data$results3$.extensions) === null || _data$results3$$exten === void 0 ? void 0 : _data$results3$$exten.length\n      });\n      return null;\n    }\n    console.log('‚úÖ Extensi√≥n encontrada:', extension.extensionName);\n    console.log('üìà Estad√≠sticas disponibles:', extension.statistics);\n    if (extension.statistics) {\n      var _extension$versions, _extension$versions$;\n      // Mostrar TODAS las estad√≠sticas disponibles\n      console.log('üìã LISTA COMPLETA DE ESTAD√çSTICAS:');\n      extension.statistics.forEach((stat, index) => {\n        console.log(`  ${index + 1}. ${stat.statisticName}: ${stat.value}`);\n      });\n\n      // Mapear las estad√≠sticas correctas\n      const statsMap = {};\n      extension.statistics.forEach(stat => {\n        statsMap[stat.statisticName] = stat.value;\n      });\n      console.log('üó∫Ô∏è Mapa de estad√≠sticas:', statsMap);\n\n      // Buscar downloads con m√∫ltiples nombres posibles\n      const possibleDownloadNames = ['download', 'downloads', 'downloadCount', 'totalDownloads', 'install',\n      // Fallback\n      'installs', 'installCount'];\n      let foundDownloads = null;\n      let downloadStatName = null;\n      for (const name of possibleDownloadNames) {\n        if (statsMap[name] !== undefined) {\n          foundDownloads = statsMap[name];\n          downloadStatName = name;\n          console.log(`üéØ Downloads encontrados con nombre \"${name}\":`, foundDownloads);\n          break;\n        }\n      }\n      if (!foundDownloads) {\n        console.warn('‚ö†Ô∏è No se encontraron downloads con ning√∫n nombre conocido');\n        console.log('üîç Nombres buscados:', possibleDownloadNames);\n        console.log('üîç Nombres disponibles:', Object.keys(statsMap));\n      }\n      const result = {\n        // Downloads con logging detallado\n        downloads: foundDownloads || 0,\n        // Installs (que ya funciona)\n        installs: statsMap['install'] || statsMap['installs'] || statsMap['installCount'] || statsMap['activeInstalls'] || 0,\n        // Rating (que ya funciona)\n        rating: statsMap['averagerating'] || statsMap['averageRating'] || statsMap['rating'] || 0,\n        ratingCount: statsMap['ratingcount'] || statsMap['ratingCount'] || statsMap['reviewCount'] || 0,\n        version: ((_extension$versions = extension.versions) === null || _extension$versions === void 0 ? void 0 : (_extension$versions$ = _extension$versions[0]) === null || _extension$versions$ === void 0 ? void 0 : _extension$versions$.version) || '1.0.0',\n        // Datos adicionales para debugging\n        debug: {\n          allStats: statsMap,\n          downloadStatName,\n          foundDownloads,\n          availableStatNames: Object.keys(statsMap)\n        }\n      };\n      console.log('üì¶ Resultado final:', result);\n      console.log('üî¢ Downloads finales:', result.downloads);\n      console.log('üî¢ Installs finales:', result.installs);\n      console.log('‚≠ê Rating final:', result.rating);\n      return result;\n    } else {\n      console.error('‚ùå No hay estad√≠sticas disponibles en la extensi√≥n');\n      return null;\n    }\n  } catch (error) {\n    console.error('üí• Error completo en API:', error);\n    console.error('üí• Stack trace:', error.stack);\n    return null;\n  }\n};","map":{"version":3,"names":["EXTENSION_ID","MARKETPLACE_API","getExtensionStats","_data$results","_data$results$","_data$results$$extens","console","log","response","fetch","method","headers","body","JSON","stringify","filters","criteria","filterType","value","flags","status","data","json","extension","results","extensions","_data$results2","_data$results3","_data$results3$","_data$results3$$exten","error","length","extensionName","statistics","_extension$versions","_extension$versions$","forEach","stat","index","statisticName","statsMap","possibleDownloadNames","foundDownloads","downloadStatName","name","undefined","warn","Object","keys","result","downloads","installs","rating","ratingCount","version","versions","debug","allStats","availableStatNames","stack"],"sources":["/home/adrian/web_code_xr/src/utils/marketplaceAPI.js"],"sourcesContent":["const EXTENSION_ID = 'aMonteSl.code-xr';\nconst MARKETPLACE_API = 'https://marketplace.visualstudio.com/_apis/public/gallery';\n\n// Funci√≥n para obtener datos b√°sicos de la extensi√≥n\nexport const getExtensionStats = async () => {\n  try {\n    console.log('üîç Iniciando b√∫squeda de estad√≠sticas para:', EXTENSION_ID);\n    \n    const response = await fetch(`${MARKETPLACE_API}/extensionquery`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json;api-version=3.0-preview.1'\n      },\n      body: JSON.stringify({\n        filters: [{\n          criteria: [\n            { filterType: 7, value: EXTENSION_ID }\n          ]\n        }],\n        flags: 914 // Incluye estad√≠sticas completas\n      })\n    });\n\n    console.log('üì° Respuesta de la API recibida, status:', response.status);\n    \n    const data = await response.json();\n    console.log('üìä Datos JSON completos de la API:', data);\n    \n    const extension = data.results?.[0]?.extensions?.[0];\n    \n    if (!extension) {\n      console.error('‚ùå No se encontr√≥ la extensi√≥n en los resultados');\n      console.log('üîç Estructura de respuesta:', {\n        results: data.results?.length,\n        extensions: data.results?.[0]?.extensions?.length\n      });\n      return null;\n    }\n\n    console.log('‚úÖ Extensi√≥n encontrada:', extension.extensionName);\n    console.log('üìà Estad√≠sticas disponibles:', extension.statistics);\n    \n    if (extension.statistics) {\n      // Mostrar TODAS las estad√≠sticas disponibles\n      console.log('üìã LISTA COMPLETA DE ESTAD√çSTICAS:');\n      extension.statistics.forEach((stat, index) => {\n        console.log(`  ${index + 1}. ${stat.statisticName}: ${stat.value}`);\n      });\n\n      // Mapear las estad√≠sticas correctas\n      const statsMap = {};\n      extension.statistics.forEach(stat => {\n        statsMap[stat.statisticName] = stat.value;\n      });\n\n      console.log('üó∫Ô∏è Mapa de estad√≠sticas:', statsMap);\n\n      // Buscar downloads con m√∫ltiples nombres posibles\n      const possibleDownloadNames = [\n        'download',\n        'downloads', \n        'downloadCount',\n        'totalDownloads',\n        'install', // Fallback\n        'installs',\n        'installCount'\n      ];\n\n      let foundDownloads = null;\n      let downloadStatName = null;\n\n      for (const name of possibleDownloadNames) {\n        if (statsMap[name] !== undefined) {\n          foundDownloads = statsMap[name];\n          downloadStatName = name;\n          console.log(`üéØ Downloads encontrados con nombre \"${name}\":`, foundDownloads);\n          break;\n        }\n      }\n\n      if (!foundDownloads) {\n        console.warn('‚ö†Ô∏è No se encontraron downloads con ning√∫n nombre conocido');\n        console.log('üîç Nombres buscados:', possibleDownloadNames);\n        console.log('üîç Nombres disponibles:', Object.keys(statsMap));\n      }\n\n      const result = {\n        // Downloads con logging detallado\n        downloads: foundDownloads || 0,\n        \n        // Installs (que ya funciona)\n        installs: statsMap['install'] || \n                 statsMap['installs'] || \n                 statsMap['installCount'] || \n                 statsMap['activeInstalls'] ||\n                 0,\n        \n        // Rating (que ya funciona)\n        rating: statsMap['averagerating'] || \n               statsMap['averageRating'] || \n               statsMap['rating'] ||\n               0,\n        \n        ratingCount: statsMap['ratingcount'] || \n                    statsMap['ratingCount'] || \n                    statsMap['reviewCount'] ||\n                    0,\n        \n        version: extension.versions?.[0]?.version || '1.0.0',\n        \n        // Datos adicionales para debugging\n        debug: {\n          allStats: statsMap,\n          downloadStatName,\n          foundDownloads,\n          availableStatNames: Object.keys(statsMap)\n        }\n      };\n\n      console.log('üì¶ Resultado final:', result);\n      console.log('üî¢ Downloads finales:', result.downloads);\n      console.log('üî¢ Installs finales:', result.installs);\n      console.log('‚≠ê Rating final:', result.rating);\n\n      return result;\n    } else {\n      console.error('‚ùå No hay estad√≠sticas disponibles en la extensi√≥n');\n      return null;\n    }\n    \n  } catch (error) {\n    console.error('üí• Error completo en API:', error);\n    console.error('üí• Stack trace:', error.stack);\n    return null;\n  }\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,kBAAkB;AACvC,MAAMC,eAAe,GAAG,2DAA2D;;AAEnF;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,qBAAA;IACFC,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEP,YAAY,CAAC;IAExE,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,eAAe,iBAAiB,EAAE;MAChES,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACZ,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,OAAO,EAAE,CAAC;UACRC,QAAQ,EAAE,CACR;YAAEC,UAAU,EAAE,CAAC;YAAEC,KAAK,EAAElB;UAAa,CAAC;QAE1C,CAAC,CAAC;QACFmB,KAAK,EAAE,GAAG,CAAC;MACb,CAAC;IACH,CAAC,CAAC;IAEFb,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEC,QAAQ,CAACY,MAAM,CAAC;IAExE,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;IAClChB,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEc,IAAI,CAAC;IAEvD,MAAME,SAAS,IAAApB,aAAA,GAAGkB,IAAI,CAACG,OAAO,cAAArB,aAAA,wBAAAC,cAAA,GAAZD,aAAA,CAAe,CAAC,CAAC,cAAAC,cAAA,wBAAAC,qBAAA,GAAjBD,cAAA,CAAmBqB,UAAU,cAAApB,qBAAA,uBAA7BA,qBAAA,CAAgC,CAAC,CAAC;IAEpD,IAAI,CAACkB,SAAS,EAAE;MAAA,IAAAG,cAAA,EAAAC,cAAA,EAAAC,eAAA,EAAAC,qBAAA;MACdvB,OAAO,CAACwB,KAAK,CAAC,iDAAiD,CAAC;MAChExB,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE;QACzCiB,OAAO,GAAAE,cAAA,GAAEL,IAAI,CAACG,OAAO,cAAAE,cAAA,uBAAZA,cAAA,CAAcK,MAAM;QAC7BN,UAAU,GAAAE,cAAA,GAAEN,IAAI,CAACG,OAAO,cAAAG,cAAA,wBAAAC,eAAA,GAAZD,cAAA,CAAe,CAAC,CAAC,cAAAC,eAAA,wBAAAC,qBAAA,GAAjBD,eAAA,CAAmBH,UAAU,cAAAI,qBAAA,uBAA7BA,qBAAA,CAA+BE;MAC7C,CAAC,CAAC;MACF,OAAO,IAAI;IACb;IAEAzB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEgB,SAAS,CAACS,aAAa,CAAC;IAC/D1B,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEgB,SAAS,CAACU,UAAU,CAAC;IAEjE,IAAIV,SAAS,CAACU,UAAU,EAAE;MAAA,IAAAC,mBAAA,EAAAC,oBAAA;MACxB;MACA7B,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACjDgB,SAAS,CAACU,UAAU,CAACG,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC5ChC,OAAO,CAACC,GAAG,CAAC,KAAK+B,KAAK,GAAG,CAAC,KAAKD,IAAI,CAACE,aAAa,KAAKF,IAAI,CAACnB,KAAK,EAAE,CAAC;MACrE,CAAC,CAAC;;MAEF;MACA,MAAMsB,QAAQ,GAAG,CAAC,CAAC;MACnBjB,SAAS,CAACU,UAAU,CAACG,OAAO,CAACC,IAAI,IAAI;QACnCG,QAAQ,CAACH,IAAI,CAACE,aAAa,CAAC,GAAGF,IAAI,CAACnB,KAAK;MAC3C,CAAC,CAAC;MAEFZ,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEiC,QAAQ,CAAC;;MAElD;MACA,MAAMC,qBAAqB,GAAG,CAC5B,UAAU,EACV,WAAW,EACX,eAAe,EACf,gBAAgB,EAChB,SAAS;MAAE;MACX,UAAU,EACV,cAAc,CACf;MAED,IAAIC,cAAc,GAAG,IAAI;MACzB,IAAIC,gBAAgB,GAAG,IAAI;MAE3B,KAAK,MAAMC,IAAI,IAAIH,qBAAqB,EAAE;QACxC,IAAID,QAAQ,CAACI,IAAI,CAAC,KAAKC,SAAS,EAAE;UAChCH,cAAc,GAAGF,QAAQ,CAACI,IAAI,CAAC;UAC/BD,gBAAgB,GAAGC,IAAI;UACvBtC,OAAO,CAACC,GAAG,CAAC,wCAAwCqC,IAAI,IAAI,EAAEF,cAAc,CAAC;UAC7E;QACF;MACF;MAEA,IAAI,CAACA,cAAc,EAAE;QACnBpC,OAAO,CAACwC,IAAI,CAAC,2DAA2D,CAAC;QACzExC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEkC,qBAAqB,CAAC;QAC1DnC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEwC,MAAM,CAACC,IAAI,CAACR,QAAQ,CAAC,CAAC;MAC/D;MAEA,MAAMS,MAAM,GAAG;QACb;QACAC,SAAS,EAAER,cAAc,IAAI,CAAC;QAE9B;QACAS,QAAQ,EAAEX,QAAQ,CAAC,SAAS,CAAC,IACpBA,QAAQ,CAAC,UAAU,CAAC,IACpBA,QAAQ,CAAC,cAAc,CAAC,IACxBA,QAAQ,CAAC,gBAAgB,CAAC,IAC1B,CAAC;QAEV;QACAY,MAAM,EAAEZ,QAAQ,CAAC,eAAe,CAAC,IAC1BA,QAAQ,CAAC,eAAe,CAAC,IACzBA,QAAQ,CAAC,QAAQ,CAAC,IAClB,CAAC;QAERa,WAAW,EAAEb,QAAQ,CAAC,aAAa,CAAC,IACxBA,QAAQ,CAAC,aAAa,CAAC,IACvBA,QAAQ,CAAC,aAAa,CAAC,IACvB,CAAC;QAEbc,OAAO,EAAE,EAAApB,mBAAA,GAAAX,SAAS,CAACgC,QAAQ,cAAArB,mBAAA,wBAAAC,oBAAA,GAAlBD,mBAAA,CAAqB,CAAC,CAAC,cAAAC,oBAAA,uBAAvBA,oBAAA,CAAyBmB,OAAO,KAAI,OAAO;QAEpD;QACAE,KAAK,EAAE;UACLC,QAAQ,EAAEjB,QAAQ;UAClBG,gBAAgB;UAChBD,cAAc;UACdgB,kBAAkB,EAAEX,MAAM,CAACC,IAAI,CAACR,QAAQ;QAC1C;MACF,CAAC;MAEDlC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE0C,MAAM,CAAC;MAC1C3C,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE0C,MAAM,CAACC,SAAS,CAAC;MACtD5C,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE0C,MAAM,CAACE,QAAQ,CAAC;MACpD7C,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE0C,MAAM,CAACG,MAAM,CAAC;MAE7C,OAAOH,MAAM;IACf,CAAC,MAAM;MACL3C,OAAO,CAACwB,KAAK,CAAC,mDAAmD,CAAC;MAClE,OAAO,IAAI;IACb;EAEF,CAAC,CAAC,OAAOA,KAAK,EAAE;IACdxB,OAAO,CAACwB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjDxB,OAAO,CAACwB,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC6B,KAAK,CAAC;IAC7C,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}