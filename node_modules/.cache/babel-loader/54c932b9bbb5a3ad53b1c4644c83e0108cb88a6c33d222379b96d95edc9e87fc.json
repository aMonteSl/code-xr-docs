{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getPluginStats } from '../utils/marketplaceAPI';\nexport const usePluginStats = () => {\n  _s();\n  const [stats, setStats] = useState({\n    downloads: null,\n    installs: null,\n    rating: null,\n    ratingCount: null,\n    version: null,\n    loading: true,\n    error: null\n  });\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        console.log('🚀 Iniciando fetch con depuración de versión...');\n        setStats(prev => ({\n          ...prev,\n          loading: true,\n          error: null\n        }));\n        const data = await getPluginStats();\n        if (data && !data.error) {\n          console.log('✅ Datos recibidos del método exacto:', data);\n          console.log('🏷️ Versión recibida en hook:', data.version, '(tipo:', typeof data.version, ')');\n          const newStats = {\n            downloads: data.downloads && data.downloads > 0 ? data.downloads : null,\n            installs: data.installs && data.installs > 0 ? data.installs : null,\n            rating: data.rating && data.rating > 0 ? Math.round(data.rating * 10) / 10 : null,\n            ratingCount: data.ratingCount && data.ratingCount > 0 ? data.ratingCount : null,\n            version: data.version || null,\n            loading: false,\n            error: null\n          };\n          console.log('📈 Stats finales aplicadas:', newStats);\n          setStats(newStats);\n        } else {\n          console.warn('⚠️ Error en datos o sin datos, manteniendo valores null');\n          setStats(prev => ({\n            ...prev,\n            loading: false,\n            error: (data === null || data === void 0 ? void 0 : data.error) || 'No data received'\n          }));\n        }\n      } catch (error) {\n        console.error('💥 Error en hook:', error);\n        setStats(prev => ({\n          ...prev,\n          loading: false,\n          error: 'Failed to load stats'\n        }));\n      }\n    };\n    fetchStats();\n\n    // Actualizar cada 10 minutos\n    const interval = setInterval(fetchStats, 10 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return stats;\n};\n\n// ✨ MANTENER: Alias para compatibilidad\n_s(usePluginStats, \"/2omgquYpPb8CyGakX6GREu7bo8=\");\nexport const useExtensionStats = usePluginStats;","map":{"version":3,"names":["useState","useEffect","getPluginStats","usePluginStats","_s","stats","setStats","downloads","installs","rating","ratingCount","version","loading","error","fetchStats","console","log","prev","data","newStats","Math","round","warn","interval","setInterval","clearInterval","useExtensionStats"],"sources":["/home/adrian/web_code_xr/src/hooks/useExtensionStats.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getPluginStats } from '../utils/marketplaceAPI';\n\nexport const usePluginStats = () => {\n  const [stats, setStats] = useState({\n    downloads: null,\n    installs: null,\n    rating: null,\n    ratingCount: null,\n    version: null,\n    loading: true,\n    error: null\n  });\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        console.log('🚀 Iniciando fetch con depuración de versión...');\n        setStats(prev => ({ ...prev, loading: true, error: null }));\n        \n        const data = await getPluginStats();\n        \n        if (data && !data.error) {\n          console.log('✅ Datos recibidos del método exacto:', data);\n          console.log('🏷️ Versión recibida en hook:', data.version, '(tipo:', typeof data.version, ')');\n          \n          const newStats = {\n            downloads: (data.downloads && data.downloads > 0) ? data.downloads : null,\n            installs: (data.installs && data.installs > 0) ? data.installs : null,\n            rating: (data.rating && data.rating > 0) ? Math.round(data.rating * 10) / 10 : null,\n            ratingCount: (data.ratingCount && data.ratingCount > 0) ? data.ratingCount : null,\n            version: data.version || null,\n            loading: false,\n            error: null\n          };\n\n          console.log('📈 Stats finales aplicadas:', newStats);\n          setStats(newStats);\n        } else {\n          console.warn('⚠️ Error en datos o sin datos, manteniendo valores null');\n          setStats(prev => ({ \n            ...prev, \n            loading: false,\n            error: data?.error || 'No data received'\n          }));\n        }\n      } catch (error) {\n        console.error('💥 Error en hook:', error);\n        setStats(prev => ({\n          ...prev,\n          loading: false,\n          error: 'Failed to load stats'\n        }));\n      }\n    };\n\n    fetchStats();\n    \n    // Actualizar cada 10 minutos\n    const interval = setInterval(fetchStats, 10 * 60 * 1000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  return stats;\n};\n\n// ✨ MANTENER: Alias para compatibilidad\nexport const useExtensionStats = usePluginStats;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}