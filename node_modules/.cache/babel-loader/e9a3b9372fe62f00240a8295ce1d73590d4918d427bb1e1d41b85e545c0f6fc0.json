{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getExtensionStats } from '../utils/marketplaceAPI';\nexport const useExtensionStats = () => {\n  _s();\n  const [stats, setStats] = useState({\n    downloads: 120,\n    // Valores reales que mencionaste\n    installs: 38,\n    rating: 4.8,\n    ratingCount: 42,\n    version: '2.0.0',\n    loading: true,\n    error: null\n  });\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        console.log('🚀 Iniciando fetch de estadísticas combinado...');\n        setStats(prev => ({\n          ...prev,\n          loading: true,\n          error: null\n        }));\n        const data = await getExtensionStats();\n        if (data) {\n          console.log('✅ Datos finales recibidos:', data);\n          const newStats = {\n            // Solo actualizar si los valores son mayores a 0 y diferentes de fallback\n            downloads: data.downloads && data.downloads > 0 ? data.downloads : stats.downloads,\n            installs: data.installs && data.installs > 0 ? data.installs : stats.installs,\n            rating: data.rating && data.rating > 0 ? Math.round(data.rating * 10) / 10 : stats.rating,\n            ratingCount: data.ratingCount && data.ratingCount > 0 ? data.ratingCount : stats.ratingCount,\n            version: data.version || stats.version,\n            loading: false,\n            error: null\n          };\n          console.log('📈 Stats aplicadas (solo si son válidas):', newStats);\n          setStats(newStats);\n        } else {\n          console.warn('⚠️ No se recibieron datos, manteniendo valores actuales');\n          setStats(prev => ({\n            ...prev,\n            loading: false\n          }));\n        }\n      } catch (error) {\n        console.error('💥 Error en hook:', error);\n        setStats(prev => ({\n          ...prev,\n          loading: false,\n          error: 'Failed to load stats'\n        }));\n      }\n    };\n    fetchStats();\n\n    // Actualizar cada 15 minutos para datos más frescos\n    const interval = setInterval(fetchStats, 15 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return stats;\n};\n_s(useExtensionStats, \"jLm+8xjXuz1xCyAAW8Ff1V9Z9IE=\");","map":{"version":3,"names":["useState","useEffect","getExtensionStats","useExtensionStats","_s","stats","setStats","downloads","installs","rating","ratingCount","version","loading","error","fetchStats","console","log","prev","data","newStats","Math","round","warn","interval","setInterval","clearInterval"],"sources":["/home/adrian/web_code_xr/src/hooks/useExtensionStats.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getExtensionStats } from '../utils/marketplaceAPI';\n\nexport const useExtensionStats = () => {\n  const [stats, setStats] = useState({\n    downloads: 120, // Valores reales que mencionaste\n    installs: 38,\n    rating: 4.8,\n    ratingCount: 42,\n    version: '2.0.0',\n    loading: true,\n    error: null\n  });\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        console.log('🚀 Iniciando fetch de estadísticas combinado...');\n        setStats(prev => ({ ...prev, loading: true, error: null }));\n        \n        const data = await getExtensionStats();\n        \n        if (data) {\n          console.log('✅ Datos finales recibidos:', data);\n          \n          const newStats = {\n            // Solo actualizar si los valores son mayores a 0 y diferentes de fallback\n            downloads: (data.downloads && data.downloads > 0) ? data.downloads : stats.downloads,\n            installs: (data.installs && data.installs > 0) ? data.installs : stats.installs,\n            rating: (data.rating && data.rating > 0) ? Math.round(data.rating * 10) / 10 : stats.rating,\n            ratingCount: (data.ratingCount && data.ratingCount > 0) ? data.ratingCount : stats.ratingCount,\n            version: data.version || stats.version,\n            loading: false,\n            error: null\n          };\n\n          console.log('📈 Stats aplicadas (solo si son válidas):', newStats);\n          setStats(newStats);\n        } else {\n          console.warn('⚠️ No se recibieron datos, manteniendo valores actuales');\n          setStats(prev => ({ ...prev, loading: false }));\n        }\n      } catch (error) {\n        console.error('💥 Error en hook:', error);\n        setStats(prev => ({\n          ...prev,\n          loading: false,\n          error: 'Failed to load stats'\n        }));\n      }\n    };\n\n    fetchStats();\n    \n    // Actualizar cada 15 minutos para datos más frescos\n    const interval = setInterval(fetchStats, 15 * 60 * 1000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  return stats;\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,iBAAiB,QAAQ,yBAAyB;AAE3D,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC;IACjCO,SAAS,EAAE,GAAG;IAAE;IAChBC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,GAAG;IACXC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,OAAO;IAChBC,OAAO,EAAE,IAAI;IACbC,KAAK,EAAE;EACT,CAAC,CAAC;EAEFZ,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;QAC9DV,QAAQ,CAACW,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAEL,OAAO,EAAE,IAAI;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC,CAAC;QAE3D,MAAMK,IAAI,GAAG,MAAMhB,iBAAiB,CAAC,CAAC;QAEtC,IAAIgB,IAAI,EAAE;UACRH,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEE,IAAI,CAAC;UAE/C,MAAMC,QAAQ,GAAG;YACf;YACAZ,SAAS,EAAGW,IAAI,CAACX,SAAS,IAAIW,IAAI,CAACX,SAAS,GAAG,CAAC,GAAIW,IAAI,CAACX,SAAS,GAAGF,KAAK,CAACE,SAAS;YACpFC,QAAQ,EAAGU,IAAI,CAACV,QAAQ,IAAIU,IAAI,CAACV,QAAQ,GAAG,CAAC,GAAIU,IAAI,CAACV,QAAQ,GAAGH,KAAK,CAACG,QAAQ;YAC/EC,MAAM,EAAGS,IAAI,CAACT,MAAM,IAAIS,IAAI,CAACT,MAAM,GAAG,CAAC,GAAIW,IAAI,CAACC,KAAK,CAACH,IAAI,CAACT,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,GAAGJ,KAAK,CAACI,MAAM;YAC3FC,WAAW,EAAGQ,IAAI,CAACR,WAAW,IAAIQ,IAAI,CAACR,WAAW,GAAG,CAAC,GAAIQ,IAAI,CAACR,WAAW,GAAGL,KAAK,CAACK,WAAW;YAC9FC,OAAO,EAAEO,IAAI,CAACP,OAAO,IAAIN,KAAK,CAACM,OAAO;YACtCC,OAAO,EAAE,KAAK;YACdC,KAAK,EAAE;UACT,CAAC;UAEDE,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAEG,QAAQ,CAAC;UAClEb,QAAQ,CAACa,QAAQ,CAAC;QACpB,CAAC,MAAM;UACLJ,OAAO,CAACO,IAAI,CAAC,yDAAyD,CAAC;UACvEhB,QAAQ,CAACW,IAAI,KAAK;YAAE,GAAGA,IAAI;YAAEL,OAAO,EAAE;UAAM,CAAC,CAAC,CAAC;QACjD;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdE,OAAO,CAACF,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzCP,QAAQ,CAACW,IAAI,KAAK;UAChB,GAAGA,IAAI;UACPL,OAAO,EAAE,KAAK;UACdC,KAAK,EAAE;QACT,CAAC,CAAC,CAAC;MACL;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;;IAEZ;IACA,MAAMS,QAAQ,GAAGC,WAAW,CAACV,UAAU,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAExD,OAAO,MAAMW,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOlB,KAAK;AACd,CAAC;AAACD,EAAA,CA1DWD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}