{"ast":null,"code":"export const formatNumber = num => {\n  if (num >= 1000000) {\n    return (num / 1000000).toFixed(1) + 'M';\n  }\n  if (num >= 1000) {\n    return (num / 1000).toFixed(1) + 'K';\n  }\n  return num.toLocaleString();\n};\nexport const formatRating = rating => {\n  return `${rating.toFixed(1)}★`;\n};\nexport const formatVersion = version => {\n  return `v${version}`;\n};","map":{"version":3,"names":["formatNumber","num","toFixed","toLocaleString","formatRating","rating","formatVersion","version"],"sources":["/home/adrian/web_code_xr/src/utils/formatNumbers.js"],"sourcesContent":["export const formatNumber = (num) => {\n  if (num >= 1000000) {\n    return (num / 1000000).toFixed(1) + 'M';\n  }\n  if (num >= 1000) {\n    return (num / 1000).toFixed(1) + 'K';\n  }\n  return num.toLocaleString();\n};\n\nexport const formatRating = (rating) => {\n  return `${rating.toFixed(1)}★`;\n};\n\nexport const formatVersion = (version) => {\n  return `v${version}`;\n};"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAIC,GAAG,IAAK;EACnC,IAAIA,GAAG,IAAI,OAAO,EAAE;IAClB,OAAO,CAACA,GAAG,GAAG,OAAO,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;EACzC;EACA,IAAID,GAAG,IAAI,IAAI,EAAE;IACf,OAAO,CAACA,GAAG,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;EACtC;EACA,OAAOD,GAAG,CAACE,cAAc,CAAC,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,MAAM,IAAK;EACtC,OAAO,GAAGA,MAAM,CAACH,OAAO,CAAC,CAAC,CAAC,GAAG;AAChC,CAAC;AAED,OAAO,MAAMI,aAAa,GAAIC,OAAO,IAAK;EACxC,OAAO,IAAIA,OAAO,EAAE;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}