{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getExtensionStats } from '../utils/marketplaceAPI';\nexport const useExtensionStats = () => {\n  _s();\n  const [stats, setStats] = useState({\n    downloads: 15847,\n    // Valores por defecto/fallback\n    installs: 3291,\n    rating: 4.8,\n    ratingCount: 42,\n    version: '2.0.0',\n    loading: true,\n    error: null\n  });\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        console.log('🚀 Iniciando fetch de estadísticas...');\n        setStats(prev => ({\n          ...prev,\n          loading: true,\n          error: null\n        }));\n        const data = await getExtensionStats();\n        if (data) {\n          console.log('✅ Datos recibidos en hook:', data);\n          console.log('📊 Downloads específicos:', data.downloads);\n          console.log('📊 Installs específicos:', data.installs);\n          console.log('📊 Rating específico:', data.rating);\n          console.log('🐛 Debug info:', data.debug);\n          const newStats = {\n            downloads: data.downloads || 15847,\n            // Mantener fallback si es 0\n            installs: data.installs || 3291,\n            rating: data.rating ? Math.round(data.rating * 10) / 10 : 4.8,\n            ratingCount: data.ratingCount || 42,\n            version: data.version || '2.0.0',\n            loading: false,\n            error: null\n          };\n          console.log('📈 Stats finales que se van a aplicar:', newStats);\n          setStats(newStats);\n        } else {\n          console.error('❌ No se recibieron datos del API');\n          throw new Error('No data received');\n        }\n      } catch (error) {\n        console.error('💥 Error en hook useExtensionStats:', error);\n        setStats(prev => ({\n          ...prev,\n          loading: false,\n          error: 'Failed to load stats'\n        }));\n      }\n    };\n    fetchStats();\n\n    // Actualizar cada 10 minutos\n    const interval = setInterval(fetchStats, 10 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Logging adicional cuando cambian las stats\n  useEffect(() => {\n    console.log('📊 Stats actualizadas en estado:', {\n      downloads: stats.downloads,\n      installs: stats.installs,\n      rating: stats.rating,\n      loading: stats.loading,\n      error: stats.error\n    });\n  }, [stats]);\n  return stats;\n};\n_s(useExtensionStats, \"nP30UzV283MQkUjvL+WAby/ZUMQ=\");","map":{"version":3,"names":["useState","useEffect","getExtensionStats","useExtensionStats","_s","stats","setStats","downloads","installs","rating","ratingCount","version","loading","error","fetchStats","console","log","prev","data","debug","newStats","Math","round","Error","interval","setInterval","clearInterval"],"sources":["/home/adrian/web_code_xr/src/hooks/useExtensionStats.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getExtensionStats } from '../utils/marketplaceAPI';\n\nexport const useExtensionStats = () => {\n  const [stats, setStats] = useState({\n    downloads: 15847, // Valores por defecto/fallback\n    installs: 3291,\n    rating: 4.8,\n    ratingCount: 42,\n    version: '2.0.0',\n    loading: true,\n    error: null\n  });\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        console.log('🚀 Iniciando fetch de estadísticas...');\n        setStats(prev => ({ ...prev, loading: true, error: null }));\n        \n        const data = await getExtensionStats();\n        \n        if (data) {\n          console.log('✅ Datos recibidos en hook:', data);\n          console.log('📊 Downloads específicos:', data.downloads);\n          console.log('📊 Installs específicos:', data.installs);\n          console.log('📊 Rating específico:', data.rating);\n          console.log('🐛 Debug info:', data.debug);\n\n          const newStats = {\n            downloads: data.downloads || 15847, // Mantener fallback si es 0\n            installs: data.installs || 3291,\n            rating: data.rating ? Math.round(data.rating * 10) / 10 : 4.8,\n            ratingCount: data.ratingCount || 42,\n            version: data.version || '2.0.0',\n            loading: false,\n            error: null\n          };\n\n          console.log('📈 Stats finales que se van a aplicar:', newStats);\n          setStats(newStats);\n        } else {\n          console.error('❌ No se recibieron datos del API');\n          throw new Error('No data received');\n        }\n      } catch (error) {\n        console.error('💥 Error en hook useExtensionStats:', error);\n        setStats(prev => ({\n          ...prev,\n          loading: false,\n          error: 'Failed to load stats'\n        }));\n      }\n    };\n\n    fetchStats();\n    \n    // Actualizar cada 10 minutos\n    const interval = setInterval(fetchStats, 10 * 60 * 1000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  // Logging adicional cuando cambian las stats\n  useEffect(() => {\n    console.log('📊 Stats actualizadas en estado:', {\n      downloads: stats.downloads,\n      installs: stats.installs,\n      rating: stats.rating,\n      loading: stats.loading,\n      error: stats.error\n    });\n  }, [stats]);\n\n  return stats;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}