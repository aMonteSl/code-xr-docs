{"ast":null,"code":"const EXTENSION_ID = 'aMonteSl.code-xr';\nconst MARKETPLACE_API = 'https://marketplace.visualstudio.com/_apis/public/gallery';\n\n// M√©todo m√°s espec√≠fico para estad√≠sticas\nexport const getExtensionStatsAdvanced = async () => {\n  try {\n    var _data$results, _data$results$, _data$results$$extens;\n    console.log('üîç Usando API avanzada de estad√≠sticas para:', EXTENSION_ID);\n\n    // Usar flags m√°s espec√≠ficos para estad√≠sticas completas\n    const response = await fetch(`${MARKETPLACE_API}/extensionquery`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json;api-version=7.1-preview.1',\n        // Versi√≥n m√°s nueva\n        'User-Agent': 'VSCode-WebExtension'\n      },\n      body: JSON.stringify({\n        filters: [{\n          criteria: [{\n            filterType: 7,\n            value: EXTENSION_ID\n          }]\n        }],\n        flags: 0x1 | 0x2 | 0x4 | 0x8 | 0x10 | 0x20 | 0x40 | 0x80 | 0x100 | 0x200 | 0x400 | 0x800\n        // Flags combinados para obtener todos los datos posibles\n      })\n    });\n    console.log('üì° Respuesta avanzada status:', response.status);\n    const data = await response.json();\n    console.log('üìä Datos completos API avanzada:', data);\n    const extension = (_data$results = data.results) === null || _data$results === void 0 ? void 0 : (_data$results$ = _data$results[0]) === null || _data$results$ === void 0 ? void 0 : (_data$results$$extens = _data$results$.extensions) === null || _data$results$$extens === void 0 ? void 0 : _data$results$$extens[0];\n    if (!extension) {\n      console.error('‚ùå No se encontr√≥ extensi√≥n en API avanzada');\n      return null;\n    }\n    console.log('‚úÖ Extensi√≥n encontrada (avanzada):', extension.extensionName);\n    console.log('üìà Estad√≠sticas completas:', extension.statistics);\n\n    // Examinar TODAS las propiedades de statistics\n    if (extension.statistics) {\n      var _extension$versions, _extension$versions$;\n      console.log('üìã AN√ÅLISIS DETALLADO DE ESTAD√çSTICAS:');\n      extension.statistics.forEach((stat, index) => {\n        console.log(`  ${index + 1}. Nombre: \"${stat.statisticName}\" | Valor: ${stat.value} | Tipo: ${typeof stat.value}`);\n      });\n\n      // Crear mapa completo\n      const statsMap = {};\n      extension.statistics.forEach(stat => {\n        statsMap[stat.statisticName.toLowerCase()] = Number(stat.value);\n        statsMap[stat.statisticName] = Number(stat.value); // Tambi√©n versi√≥n original\n      });\n      console.log('üó∫Ô∏è Mapa completo (case-insensitive):', statsMap);\n\n      // Buscar con m√°s variaciones\n      const getStatValue = possibleNames => {\n        for (const name of possibleNames) {\n          if (statsMap[name] !== undefined && statsMap[name] !== null) {\n            console.log(`üéØ Encontrado \"${name}\": ${statsMap[name]}`);\n            return statsMap[name];\n          }\n        }\n        return null;\n      };\n      const downloads = getStatValue(['download', 'downloads', 'downloadcount', 'totaldownloads', 'install', 'installs', 'installcount', 'totalinstalls', 'updatecount', 'updateCount']);\n      const installs = getStatValue(['install', 'installs', 'installcount', 'activeinstalls', 'activeInstalls', 'currentinstalls', 'currentInstalls']);\n      const rating = getStatValue(['averagerating', 'averageRating', 'rating', 'score']);\n      const ratingCount = getStatValue(['ratingcount', 'ratingCount', 'reviewcount', 'reviewCount', 'ratingscount', 'ratingsCount']);\n      return {\n        downloads: downloads || 0,\n        installs: installs || 0,\n        rating: rating || 0,\n        ratingCount: ratingCount || 0,\n        version: ((_extension$versions = extension.versions) === null || _extension$versions === void 0 ? void 0 : (_extension$versions$ = _extension$versions[0]) === null || _extension$versions$ === void 0 ? void 0 : _extension$versions$.version) || '1.0.0',\n        debug: {\n          allStats: statsMap,\n          rawStats: extension.statistics,\n          apiVersion: '7.1-preview.1'\n        }\n      };\n    }\n    return null;\n  } catch (error) {\n    console.error('üí• Error en API avanzada:', error);\n    return null;\n  }\n};\n\n// M√©todo de fallback directo desde la p√°gina web\nexport const getStatsFromWebPage = async () => {\n  try {\n    console.log('üåê Obteniendo stats directamente de la p√°gina web...');\n    const response = await fetch(`https://marketplace.visualstudio.com/items?itemName=${EXTENSION_ID}`, {\n      headers: {\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n      }\n    });\n    const html = await response.text();\n    console.log('üìÑ HTML obtenido, longitud:', html.length);\n\n    // Patrones mejorados basados en el HTML actual del marketplace\n    const extractNumber = (pattern, text, patternName) => {\n      const match = text.match(pattern);\n      if (match && match[1]) {\n        const number = parseInt(match[1].replace(/[,\\s]/g, ''));\n        console.log(`üéØ ${patternName} encontrado:`, number, '(match:', match[1], ')');\n        return number;\n      }\n      return null;\n    };\n\n    // Patrones actualizados para 2024\n    const downloadPatterns = [/(\\d{1,3}(?:,\\d{3})*)\\s*(?:total\\s*)?(?:downloads?|installs?)/i, /\"(?:download|install)Count\":\\s*\"?(\\d+)\"?/i, /downloads?[^\\d]*(\\d{1,3}(?:,\\d{3})*)/i, /installs?[^\\d]*(\\d{1,3}(?:,\\d{3})*)/i, />(\\d{1,3}(?:,\\d{3})*)<.*(?:download|install)/i];\n    const installPatterns = [/(\\d{1,3}(?:,\\d{3})*)\\s*(?:active|current)\\s*(?:installs?|users?)/i, /\"(?:active|current)(?:Install|User)s?\":\\s*\"?(\\d+)\"?/i, /active[^\\d]*(\\d{1,3}(?:,\\d{3})*)/i, />(\\d{1,3}(?:,\\d{3})*)<.*active/i];\n    let downloads = null;\n    let installs = null;\n\n    // Buscar downloads\n    for (let i = 0; i < downloadPatterns.length && !downloads; i++) {\n      downloads = extractNumber(downloadPatterns[i], html, `Download Pattern ${i + 1}`);\n    }\n\n    // Buscar installs activos\n    for (let i = 0; i < installPatterns.length && !installs; i++) {\n      installs = extractNumber(installPatterns[i], html, `Install Pattern ${i + 1}`);\n    }\n    console.log('üìä Resultados del web scraping:', {\n      downloads: downloads,\n      installs: installs\n    });\n    return {\n      downloads: downloads,\n      installs: installs,\n      source: 'web-scraping',\n      timestamp: new Date().toISOString()\n    };\n  } catch (error) {\n    console.error('üí• Error en web scraping:', error);\n    return null;\n  }\n};\n\n// M√©todo combinado que prioriza precisi√≥n\nexport const getExtensionStats = async () => {\n  try {\n    console.log('üîÑ Iniciando obtenci√≥n combinada de estad√≠sticas...');\n\n    // 1. Intentar API avanzada primero\n    const apiData = await getExtensionStatsAdvanced();\n\n    // 2. Intentar web scraping como complemento\n    const webData = await getStatsFromWebPage();\n    console.log('üìä Comparaci√≥n de fuentes:');\n    console.log('  API:', apiData);\n    console.log('  Web:', webData);\n\n    // 3. Combinar resultados priorizando la fuente m√°s confiable\n    let finalStats = {\n      downloads: 0,\n      installs: 0,\n      rating: 0,\n      ratingCount: 0,\n      version: '1.0.0'\n    };\n    if (apiData) {\n      finalStats = {\n        ...finalStats,\n        ...apiData\n      };\n    }\n\n    // Si web scraping encontr√≥ n√∫meros m√°s altos, usar esos (probablemente m√°s actuales)\n    if (webData) {\n      if (webData.downloads && webData.downloads > finalStats.downloads) {\n        console.log('üîÑ Usando downloads del web scraping (m√°s actuales):', webData.downloads);\n        finalStats.downloads = webData.downloads;\n      }\n      if (webData.installs && webData.installs > finalStats.installs) {\n        console.log('üîÑ Usando installs del web scraping (m√°s actuales):', webData.installs);\n        finalStats.installs = webData.installs;\n      }\n    }\n    console.log('üìà Estad√≠sticas finales combinadas:', finalStats);\n    return finalStats;\n  } catch (error) {\n    console.error('üí• Error en m√©todo combinado:', error);\n    return null;\n  }\n};","map":{"version":3,"names":["EXTENSION_ID","MARKETPLACE_API","getExtensionStatsAdvanced","_data$results","_data$results$","_data$results$$extens","console","log","response","fetch","method","headers","body","JSON","stringify","filters","criteria","filterType","value","flags","status","data","json","extension","results","extensions","error","extensionName","statistics","_extension$versions","_extension$versions$","forEach","stat","index","statisticName","statsMap","toLowerCase","Number","getStatValue","possibleNames","name","undefined","downloads","installs","rating","ratingCount","version","versions","debug","allStats","rawStats","apiVersion","getStatsFromWebPage","html","text","length","extractNumber","pattern","patternName","match","number","parseInt","replace","downloadPatterns","installPatterns","i","source","timestamp","Date","toISOString","getExtensionStats","apiData","webData","finalStats"],"sources":["/home/adrian/web_code_xr/src/utils/marketplaceAPI.js"],"sourcesContent":["const EXTENSION_ID = 'aMonteSl.code-xr';\nconst MARKETPLACE_API = 'https://marketplace.visualstudio.com/_apis/public/gallery';\n\n// M√©todo m√°s espec√≠fico para estad√≠sticas\nexport const getExtensionStatsAdvanced = async () => {\n  try {\n    console.log('üîç Usando API avanzada de estad√≠sticas para:', EXTENSION_ID);\n    \n    // Usar flags m√°s espec√≠ficos para estad√≠sticas completas\n    const response = await fetch(`${MARKETPLACE_API}/extensionquery`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json;api-version=7.1-preview.1', // Versi√≥n m√°s nueva\n        'User-Agent': 'VSCode-WebExtension'\n      },\n      body: JSON.stringify({\n        filters: [{\n          criteria: [\n            { filterType: 7, value: EXTENSION_ID }\n          ]\n        }],\n        flags: 0x1 | 0x2 | 0x4 | 0x8 | 0x10 | 0x20 | 0x40 | 0x80 | 0x100 | 0x200 | 0x400 | 0x800\n        // Flags combinados para obtener todos los datos posibles\n      })\n    });\n\n    console.log('üì° Respuesta avanzada status:', response.status);\n    \n    const data = await response.json();\n    console.log('üìä Datos completos API avanzada:', data);\n    \n    const extension = data.results?.[0]?.extensions?.[0];\n    \n    if (!extension) {\n      console.error('‚ùå No se encontr√≥ extensi√≥n en API avanzada');\n      return null;\n    }\n\n    console.log('‚úÖ Extensi√≥n encontrada (avanzada):', extension.extensionName);\n    console.log('üìà Estad√≠sticas completas:', extension.statistics);\n\n    // Examinar TODAS las propiedades de statistics\n    if (extension.statistics) {\n      console.log('üìã AN√ÅLISIS DETALLADO DE ESTAD√çSTICAS:');\n      extension.statistics.forEach((stat, index) => {\n        console.log(`  ${index + 1}. Nombre: \"${stat.statisticName}\" | Valor: ${stat.value} | Tipo: ${typeof stat.value}`);\n      });\n\n      // Crear mapa completo\n      const statsMap = {};\n      extension.statistics.forEach(stat => {\n        statsMap[stat.statisticName.toLowerCase()] = Number(stat.value);\n        statsMap[stat.statisticName] = Number(stat.value); // Tambi√©n versi√≥n original\n      });\n\n      console.log('üó∫Ô∏è Mapa completo (case-insensitive):', statsMap);\n\n      // Buscar con m√°s variaciones\n      const getStatValue = (possibleNames) => {\n        for (const name of possibleNames) {\n          if (statsMap[name] !== undefined && statsMap[name] !== null) {\n            console.log(`üéØ Encontrado \"${name}\": ${statsMap[name]}`);\n            return statsMap[name];\n          }\n        }\n        return null;\n      };\n\n      const downloads = getStatValue([\n        'download', 'downloads', 'downloadcount', 'totaldownloads',\n        'install', 'installs', 'installcount', 'totalinstalls',\n        'updatecount', 'updateCount'\n      ]);\n\n      const installs = getStatValue([\n        'install', 'installs', 'installcount', 'activeinstalls', \n        'activeInstalls', 'currentinstalls', 'currentInstalls'\n      ]);\n\n      const rating = getStatValue([\n        'averagerating', 'averageRating', 'rating', 'score'\n      ]);\n\n      const ratingCount = getStatValue([\n        'ratingcount', 'ratingCount', 'reviewcount', 'reviewCount',\n        'ratingscount', 'ratingsCount'\n      ]);\n\n      return {\n        downloads: downloads || 0,\n        installs: installs || 0,\n        rating: rating || 0,\n        ratingCount: ratingCount || 0,\n        version: extension.versions?.[0]?.version || '1.0.0',\n        debug: {\n          allStats: statsMap,\n          rawStats: extension.statistics,\n          apiVersion: '7.1-preview.1'\n        }\n      };\n    }\n\n    return null;\n  } catch (error) {\n    console.error('üí• Error en API avanzada:', error);\n    return null;\n  }\n};\n\n// M√©todo de fallback directo desde la p√°gina web\nexport const getStatsFromWebPage = async () => {\n  try {\n    console.log('üåê Obteniendo stats directamente de la p√°gina web...');\n    \n    const response = await fetch(\n      `https://marketplace.visualstudio.com/items?itemName=${EXTENSION_ID}`,\n      {\n        headers: {\n          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n        }\n      }\n    );\n    \n    const html = await response.text();\n    console.log('üìÑ HTML obtenido, longitud:', html.length);\n\n    // Patrones mejorados basados en el HTML actual del marketplace\n    const extractNumber = (pattern, text, patternName) => {\n      const match = text.match(pattern);\n      if (match && match[1]) {\n        const number = parseInt(match[1].replace(/[,\\s]/g, ''));\n        console.log(`üéØ ${patternName} encontrado:`, number, '(match:', match[1], ')');\n        return number;\n      }\n      return null;\n    };\n\n    // Patrones actualizados para 2024\n    const downloadPatterns = [\n      /(\\d{1,3}(?:,\\d{3})*)\\s*(?:total\\s*)?(?:downloads?|installs?)/i,\n      /\"(?:download|install)Count\":\\s*\"?(\\d+)\"?/i,\n      /downloads?[^\\d]*(\\d{1,3}(?:,\\d{3})*)/i,\n      /installs?[^\\d]*(\\d{1,3}(?:,\\d{3})*)/i,\n      />(\\d{1,3}(?:,\\d{3})*)<.*(?:download|install)/i\n    ];\n\n    const installPatterns = [\n      /(\\d{1,3}(?:,\\d{3})*)\\s*(?:active|current)\\s*(?:installs?|users?)/i,\n      /\"(?:active|current)(?:Install|User)s?\":\\s*\"?(\\d+)\"?/i,\n      /active[^\\d]*(\\d{1,3}(?:,\\d{3})*)/i,\n      />(\\d{1,3}(?:,\\d{3})*)<.*active/i\n    ];\n\n    let downloads = null;\n    let installs = null;\n\n    // Buscar downloads\n    for (let i = 0; i < downloadPatterns.length && !downloads; i++) {\n      downloads = extractNumber(downloadPatterns[i], html, `Download Pattern ${i + 1}`);\n    }\n\n    // Buscar installs activos\n    for (let i = 0; i < installPatterns.length && !installs; i++) {\n      installs = extractNumber(installPatterns[i], html, `Install Pattern ${i + 1}`);\n    }\n\n    console.log('üìä Resultados del web scraping:', {\n      downloads: downloads,\n      installs: installs\n    });\n\n    return {\n      downloads: downloads,\n      installs: installs,\n      source: 'web-scraping',\n      timestamp: new Date().toISOString()\n    };\n\n  } catch (error) {\n    console.error('üí• Error en web scraping:', error);\n    return null;\n  }\n};\n\n// M√©todo combinado que prioriza precisi√≥n\nexport const getExtensionStats = async () => {\n  try {\n    console.log('üîÑ Iniciando obtenci√≥n combinada de estad√≠sticas...');\n    \n    // 1. Intentar API avanzada primero\n    const apiData = await getExtensionStatsAdvanced();\n    \n    // 2. Intentar web scraping como complemento\n    const webData = await getStatsFromWebPage();\n    \n    console.log('üìä Comparaci√≥n de fuentes:');\n    console.log('  API:', apiData);\n    console.log('  Web:', webData);\n\n    // 3. Combinar resultados priorizando la fuente m√°s confiable\n    let finalStats = {\n      downloads: 0,\n      installs: 0,\n      rating: 0,\n      ratingCount: 0,\n      version: '1.0.0'\n    };\n\n    if (apiData) {\n      finalStats = { ...finalStats, ...apiData };\n    }\n\n    // Si web scraping encontr√≥ n√∫meros m√°s altos, usar esos (probablemente m√°s actuales)\n    if (webData) {\n      if (webData.downloads && webData.downloads > finalStats.downloads) {\n        console.log('üîÑ Usando downloads del web scraping (m√°s actuales):', webData.downloads);\n        finalStats.downloads = webData.downloads;\n      }\n      \n      if (webData.installs && webData.installs > finalStats.installs) {\n        console.log('üîÑ Usando installs del web scraping (m√°s actuales):', webData.installs);\n        finalStats.installs = webData.installs;\n      }\n    }\n\n    console.log('üìà Estad√≠sticas finales combinadas:', finalStats);\n    \n    return finalStats;\n\n  } catch (error) {\n    console.error('üí• Error en m√©todo combinado:', error);\n    return null;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}